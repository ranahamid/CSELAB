<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="13_files/bmi.js" language="javascript"></script><title>ACM (UVa) Algorithm Â« Solved Programming Problems</title> <style media="screen" type="text/css" style="display: none;">body{background:#F0F0F0;color:#555555;font-size:12px;font-family:Arial,Tahoma,Verdana;margin:0 auto 20px;padding:0;line-height:20px;}#wrap{clear:both;width:920px;background:#FFFFFF;margin:0 auto 0;padding:15px 20px 0 20px;border:1px solid #E4E4E4;-moz-border-radius:10px;-khtml-border-radius:10px;-webkit-border-radius:10px;overflow:hidden;}a,a:visited{color:#008DCF;text-decoration:none;}a:hover{color:#008DCF;text-decoration:underline;}a img{border:none;}a:focus,a:hover,a:active{outline:none;}#header{background:#FFFFFF;width:960px;height:80px;margin:0 auto 20px;overflow:hidden;padding:0;position:relative;border:1px solid #E4E4E4;border-top:none;-moz-border-radius-bottomleft:10px;-moz-border-radius-bottomright:10px;-khtml-border-radius:10px;-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-webkit-border-bottom-left-radius:10px;-webkit-border-bottom-right-radius:10px;border-radius:0 0 10px 10px;}#header h1,#header h1 a,#header h1 a:visited,#header h4,#header h4 a,#header h4 a:visited{color:#333;font-size:24px;font-family:Tahoma,Arial,Verdana;font-weight:normal;margin:0 0 7px 0;padding:0;text-decoration:none;}#header h1 a:hover,#header h4 a:hover{text-decoration:none;}.header-left{width:690px;float:left;margin:0;padding:15px 0 0 20px;}.header-left p{font-family:Tahoma,Arial,Verdana;font-size:14px;font-style:italic;margin:0;padding:0;}.header-left a img{border:none;margin:0;padding:0;}.header-right{width:265px;margin:0;text-align:right;position:absolute;right:20px;top:35px;}#access{width:960px;margin:0 auto;}#nav{float:left;width:960px;min-height:45px;background:#333 url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/nav.png) repeat-x;display:block;margin:0 auto;padding:0;text-transform:uppercase;-moz-border-radius-topleft:10px;-moz-border-radius-topright:10px;-khtml-border-radius:10px;-webkit-border-top-left-radius:10px;-webkit-border-top-right-radius:10px;-webkit-border-bottom-left-radius:0;-webkit-border-bottom-right-radius:0;position:relative;}.navleft{width:710px;float:left;margin:0;padding:0;}.navright{width:220px;float:right;margin:0;padding:13px 20px 0 0;text-align:right;}.navright a,.navright a:visited{color:#EEEEEE;font-family:Arial,Tahoma,Verdana;font-weight:normal;text-decoration:none;}.navright a:hover{color:#EEEEEE;text-decoration:underline;}.rsslink{margin:0 0 0 10px;padding:3px 0 3px 16px;background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/rss.png) no-repeat left center;}#nav .widget_nav_menu h4{display:none;}.nav{font-family:Arial,Tahoma,Verdana;font-size:12px;padding:0 0 0 10px;}.nav ul{margin:0;padding:0;list-style-type:none;}.nav ul li{position:relative;float:left;}.nav ul li a{color:#EEEEEE;display:block;font-size:12px;margin:0;padding:13px 17px 12px 15px;text-decoration:none;text-shadow:#000000 1px 1px;background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/navline.png) no-repeat right;}.nav ul ul{display:none;position:absolute;top:45px;left:0;float:left;z-index:99999;}.nav ul ul ul{left:100%;top:0;}.nav ul li:hover>ul{display:block;}.nav ul li a:hover,.nav ul li a.selected{background:#333 url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/navhov.png) top;color:#EEEEEE;}.nav ul li ul li a{background:#434343;color:#FFFFFF;width:140px;margin:0;padding:6px 10px 6px 10px;border-bottom:1px solid #323232;text-shadow:#000000 1px 1px;text-transform:none;}.nav ul li ul li a:hover{background:#323232;color:#FFFFFF;}.nav li:hover>a{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/navhov.png) top;}.nav ul ul:hover>a{background:#323232;}.nav .downarrowclass{position:absolute;top:18px;right:10px;}.nav .rightarrowclass{position:absolute;top:9px;right:7px;}#supernav{position:relative;}#supernav ul{float:left;}#nav{z-index:100;}#subnav{background:#666 url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/subnav.png) repeat-x;clear:both;width:950px;float:left;min-height:37px;margin:0 auto 20px;-moz-border-radius-bottomleft:10px;-moz-border-radius-bottomright:10px;-khtml-border-radius:10px;-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-webkit-border-bottom-left-radius:10px;-webkit-border-bottom-right-radius:10px;}#subnav .widget_nav_menu h4{display:none;}.subnav{padding:0 0 0 10px;text-transform:uppercase;}.subnav ul ul{top:37px;left:0;}.subnav ul li a{background:transparent;color:#FFFFFF;display:block;font-size:12px;margin:0;padding:9px 10px 8px 10px;text-decoration:none;text-shadow:#000000 1px 1px;}.subnav ul li a:hover,.subnav ul li a.selected{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/subnavhov.png);color:#FFFFFF;}.subnav ul li ul li a{background:#777777;color:#FFFFFF;width:140px;margin:0;padding:6px 10px 6px 10px;border-bottom:1px solid #666666;text-shadow:#000000 1px 1px;text-transform:none;}.subnav ul li ul li a:hover{background:#666666;}.subnav li:hover>a{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/subnavhov.png);}.subnav ul ul:hover>a{background:#666666;}.subnav .downarrowclass{position:absolute;top:13px;right:10px;}.subnav .rightarrowclass{position:absolute;top:9px;right:7px;}#content{width:920px;margin:0 auto 0;padding:0;}#content-left{float:left;width:630px;margin:0;padding:10px 0 0 0;}#content .image-attachment,#content .full-width{width:920px;}#content .entry img,#content .entry p img{max-width:100%;}#content a img{border:none;}#content blockquote{background:#F5F5F5;margin:0 25px 15px 25px;padding:10px 20px 0 15px;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border:1px solid #E6E6E6;}#content pre{background:#F5F5F5;margin:0 0 15px 0;padding:10px 20px 0 15px;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border:1px solid #E6E6E6;width:593px;overflow:auto;}#content blockquote p{margin:0;padding:0 0 10px 0;}.post{margin:0 0 40px 0;padding:0;clear:both;}.entry{margin:0;padding:0;}.entry p{margin:0;padding:0 0 15px 0;}.entry ul{list-style-type:square;margin:0;padding:0 0 15px 0;}.entry ul li{list-style-type:square;margin:0 0 0 20px;padding:0;}.entry ul ul{list-style-type:square;margin:0;padding:0 0 0 0;}.entry ol{margin:0;padding:0 0 15px 0;}.entry ol li{margin:0 0 0 20px;padding:0;}.entry table{border:1px solid #e6e6e6;margin:0 0 15px 0;width:100%;}.entry th,.entry td{border:1px solid #e6e6e6;padding:.25em 1em;text-align:left;}.comments-content{margin:0;padding:0;}.sticky{background:#F5F5F5;margin:0 0 40px 0;padding:20px 20px 15px 20px;border:1px solid #E6E6E6;}.clear{clear:both;}.image-attachment .post-info{float:left;}.image-attachment .image-navigation{float:right;font-size:11px;text-transform:uppercase;margin:0;}.image-attachment .image-navigation span{}.image-attachment .entry-attachment{background:#F5F5F5;border:1px solid #DDD;clear:both;margin:0 0 15px 0;padding:15px 0;}.image-attachment .entry-attachment img{display:block;margin:0 auto;}#nav-above{margin:0;padding:0 0 40px 0;}.nav-previous{float:left;width:50%;}.nav-next{float:right;width:50%;text-align:right;}.post-info{font-size:11px;margin:0 0 10px 0;padding:0;text-transform:uppercase;}.post-info p{margin:0;padding:0;}.post-info abbr{border:none;}.post-meta{font-size:11px;text-transform:uppercase;margin:0;padding:5px 0 0 0;border-top:1px dotted #CCCCCC;}.post-meta p{margin:0;padding:0;}.author-box{background:#F5F5F5;margin:20px 0 40px 0;padding:10px;border:1px solid #DDDDDD;overflow:auto;clear:both;}.author-box p{margin:0;padding:0;}.author-box img{background:#FFFFFF;float:left;margin:0 10px 0 0;padding:4px;border:1px solid #E6E6E6;}#content h1,#content h2,#content h3,#content h4,#content h5,#content h6{color:#333333;font-family:Arial,Tahoma,Verdana;font-weight:normal;text-decoration:none;margin:0 0 5px 0;padding:0;}#content h1{font-size:20px;border-bottom:1px dotted #CCCCCC;margin:0 0 10px 0;padding:0 0 5px 0;}#content h2{font-size:20px;border-bottom:1px dotted #CCCCCC;margin:0 0 10px 0;padding:0 0 5px 0;}#content h2 a,#content h2 a:visited{color:#333333;text-decoration:none;}#content h2 a:hover{color:#008DCF;text-decoration:none;}#content h3{font-size:18px;}#content h4{font-size:16px;}#content h5{font-size:14px;}#content h6{font-size:12px;}.time{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/icon-time.png) no-repeat top left;margin:0 0 0 3px;padding:0 0 2px 18px;}.post-comments{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/icon-comments.png) no-repeat top left;margin:0 0 0 3px;padding:0 0 2px 18px;}.categories{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/icon-categories.png) no-repeat top left;margin:0 0 0 3px;padding:0 0 2px 18px;}.tags{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/icon-tags.png) no-repeat top left;margin:0 0 0 3px;padding:0 0 2px 18px;}img.centered{display:block;margin-left:auto;margin-right:auto;margin-bottom:10px;padding:0;}img.alignnone{padding:0;margin:0 0 10px 0;display:inline;}img.alignright{padding:0;margin:0 0 10px 15px;display:inline;}img.alignleft{padding:0;margin:0 15px 10px 0;display:inline;}.aligncenter,#sidebar .aligncenter{display:block;margin-left:auto;margin-right:auto;margin-bottom:10px;}.alignright{float:right;margin:0 0 10px 10px;}.alignleft{float:left;margin:0 10px 10px 0;}.wp-caption{background:#F5F5F5;text-align:center;padding:7px 2px 7px 2px;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border:1px solid #E4E4E4;}.wp-caption img{margin:0 0 0 0;padding:0;border:0;}.wp-caption p.wp-caption-text{margin:0;padding:5px 0 0!important;font-size:11px;font-weight:normal;line-height:12px;}#content img.wp-smiley{float:none;border:none;margin:0;padding:0;}#content img.wp-wink{float:none;border:none;margin:0;padding:0;}#sidebar{width:270px;float:right;margin:0;padding:0;display:inline;}#sidebar .widget{margin:0 0 30px 0;padding:0;}#sidebar h4{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/sidebar-headline.png) left no-repeat;color:#333333;font-size:16px;font-family:Arial,Tahoma,Verdana;font-weight:normal;margin:0 0 5px 0;padding:0 0 5px 15px;border-bottom:1px dotted #CCCCCC;}#sidebar p{margin:0;padding:0 0 10px 0;}#sidebar a img,#sidebar a:hover img{border:none;padding:0;}#sidebar ul{list-style-type:none;margin:5px 0 0 0;padding:0;}#sidebar ul li{list-style-type:none;padding:0 0 3px 5px;margin:0 0 3px 0;border-bottom:1px dotted #CCCCCC;}#sidebar .widget_tag_cloud div{padding:0 5px 0 5px;}.widget_tag_cloud a{line-height:1.25em;}#sidebar .textwidget{margin:0;padding:0 5px 0 5px;}.widget select{background:#F5F5F5;width:265px;color:#555555;font-family:Arial,Tahoma,Verdana;font-size:12px;margin:5px 0 0 0;padding:3px;display:inline;border:1px solid #E6E6E6;}#searchform{margin:0;padding:0;font-weight:bold;}#s{background:#F5F5F5!important;width:120px;color:#555555;font-family:Arial,Tahoma,Verdana;font-size:12px;font-weight:normal;padding:3px 0 4px 5px;margin:5px 5px 0 0;border:1px solid #D6D6D6;}#header #s{width:180px;margin:0 2px 0 0;}#searchsubmit{background:#666666;color:#FFFFFF;font-size:11px;font-family:Arial,Tahoma,Verdana;font-weight:bold;text-decoration:none;text-transform:uppercase;margin:0;padding:3px 5px 3px 5px;border:1px solid #666666;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;}#searchsubmit:hover{background:#333333;border:1px solid #333333;}#wp-calendar{margin:0;padding:0;width:100%;}#wp-calendar caption{color:#333333;font-size:12px;font-family:Arial,Tahoma,Verdana;font-style:italic;font-weight:normal;margin:0 0 5px 0;padding:2px 5px 0 0;text-align:right;}#wp-calendar th{color:#333333;}#wp-calendar thead{margin:10px 0 0 0;font-weight:bold;background:#F5F5F5!important;color:#F5F5F5!important;}#wp-calendar td{background:#F5F5F5;font-size:12px;font-weight:normal;text-align:center;margin:0;padding:2px;}#wp-calendar tfoot td{background:none;margin:0;padding:0;}#footer-widgeted{background:#F5F5F5;clear:both;width:920px;margin:0 auto 20px;padding:0;border:1px solid #E4E4E4;overflow:hidden;}#footer-widgeted .widget{background:none;margin:0;padding:0;border:none;}#footer-widgeted h4{background:url(http://s0.wp.com/wp-content/themes/pub/enterprise/images/sidebar-headline.png) left no-repeat;color:#333333;font-size:16px;font-family:Arial,Tahoma,Verdana;font-weight:normal;margin:0 0 5px 0;padding:0 0 5px 15px;border-bottom:1px dotted #CCCCCC;}#footer-widgeted p{margin:0;padding:0 0 10px 0;}#footer-widgeted a img,#footer-widgeted a:hover img{border:none;margin:0;padding:0;}#footer-widgeted ul{list-style-type:none;margin:5px 0 0 0;padding:0;}#footer-widgeted ul li{list-style-type:none;padding:0 0 3px 5px;margin:0 0 3px 0;border-bottom:1px dotted #CCCCCC;}#footer-widgeted .widget_tag_cloud div{padding:0 5px 0 5px;}#footer-widgeted .textwidget{margin:0;padding:0 5px 0 5px;}.footer-widgeted-1{width:280px;float:left;margin:0;padding:15px 20px 5px 20px;}.footer-widgeted-2{width:280px;float:left;margin:0;padding:15px 0 5px 0;}.footer-widgeted-3{width:280px;float:right;margin:0;padding:15px 20px 5px 0;}#footer{width:920px;clear:both;color:#666666;font-size:12px;margin:0 auto 0;padding:10px 0 0 0;border-top:1px solid #E4E4E4;}#footer a,#footer a:visited{color:#666666;font-weight:bold;text-decoration:none;}#footer a:hover{color:#008DCF;text-decoration:none;}#footer p{margin:0;padding:0;}.footerleft{width:300px;float:left;margin:0;padding:0 0 10px 0;}.footerright{width:600px;float:right;margin:0;padding:0 0 10px 0;text-align:right;}img#wpstats{clear:both;margin:0 auto;}#comments{margin:0 0 15px 0;padding:0;}#respond{margin:30px 0 0 0;padding:0;}#commentform input{background:#F5F5F5!important;color:#555555;font-family:Arial,Tahoma,Verdana;font-size:12px;padding:3px 0 3px 3px!important;margin:5px 5px 0 10px!important;border:1px solid #E6E6E6!important;}#commentform textarea{font-size:12px;}#comment{background:#F5F5F5!important;width:95%;color:#555555;font-family:Arial,Tahoma,Verdana;font-size:11px;padding:3px 0 3px 3px;margin:5px 5px 7px 0;border:1px solid #E6E6E6;}#commentform #submit{background:#666666!important;color:#FFFFFF;font-size:11px;font-family:Arial,Tahoma,Verdana;font-weight:bold;text-decoration:none;text-transform:uppercase;margin:0;padding:2px 5px 2px 5px;border:1px solid #666666!important;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;}#commentform #submit:hover{background:#333333!important;border:1px solid #333333;}.commentlist li ul li{font-size:12px;}.commentlist li{font-weight:bold;}.commentlist li .avatar{float:right;margin:0 5px 0 10px;padding:4px;border:1px solid #E6E6E6;}.commentlist cite,.commentlist cite a{font-weight:bold;font-style:normal;font-size:12px;}.commentlist p{font-weight:normal;text-transform:none;}.commentmetadata{font-weight:normal;}#commentform input{min-width:170px;padding:2px;margin:5px 5px 1px 0;}#respond:after{content:".";display:block;height:0;clear:both;visibility:hidden;}#commentform p{margin:5px 0 5px 0;}dd{margin:5px 0 0 0;padding:0;}.alt{margin:0;padding:10px;}.commentlist{margin:0;padding:0;}.commentlist ol{margin:0 0 15px 0;padding:10px;}.commentlist li{margin:15px 0 5px 0;padding:10px 5px 10px 10px;list-style:none;}.commentlist li.pingback{margin:0;padding:0 5px 0 10px;}.commentlist li ul li{margin-right:-6px;margin-left:10px;}.commentlist p{margin:10px 5px 10px 0;padding:0;}.children{margin:0;padding:0;}.nocomments{text-align:center;margin:0;padding:0;}.reply a,.reply a:visited{background:#666666;font-size:11px;color:#FFFFFF;text-decoration:none;margin:0;padding:2px 5px 3px 5px;border:1px solid #666666;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;}.reply a:hover{background:#333333;text-decoration:none;border:1px solid #333333;}.commentmetadata{font-size:10px;margin:0;display:block;}.subnavigation{display:block;text-align:center;margin-top:10px;margin-bottom:40px;}.alignright{float:right;}.alignleft{float:left;}.thread-alt{background:#F5F5F5;margin:0;padding:0;}.thread-even{background:#FFFFFF;margin:0;padding:0;}.depth-1{border:1px solid #FFFFFF;margin:0;padding:0;}.even,.alt{border:1px solid #E6E6E6;margin:0;padding:0;}
</style>
<link rel="pingback" href="http://tausiq.wordpress.com/xmlrpc.php"><style type="text/css">#flickr_badge_source_txt{padding:0;font:11px Arial,Helvetica,Sans serif;color:#666666;}#flickr_badge_icon{display:block!important;margin:0!important;border:1px solid rgb(0,0,0)!important;}#flickr_icon_td{padding:0 5px 0 0!important;}.flickr_badge_image{text-align:center!important;}.flickr_badge_image img{border:1px solid black!important;}#flickr_badge_uber_wrapper{width:150px;}#flickr_www{display:block;text-align:center;padding:0 10px 0 10px!important;font:11px Arial,Helvetica,Sans serif!important;color:#3993ff!important;}#flickr_badge_uber_wrapper a:hover,#flickr_badge_uber_wrapper a:link,#flickr_badge_uber_wrapper a:active,#flickr_badge_uber_wrapper a:visited{text-decoration:none!important;background:inherit!important;color:#3993ff;}#flickr_badge_wrapper{background-color:#ffffff;border:solid 1px #000000}#flickr_badge_source{padding:0!important;font:11px Arial,Helvetica,Sans serif!important;color:#666666!important;}</style> <link rel="alternate" type="application/rss+xml" title="Solved Programming Problems Â» Feed" href="http://tausiq.wordpress.com/feed/"><link rel="alternate" type="application/rss+xml" title="Solved Programming Problems Â» Comments Feed" href="http://tausiq.wordpress.com/comments/feed/"><link rel="alternate" type="application/rss+xml" title="Solved Programming Problems Â» ACM (UVa) Algorithm Category Feed" href="http://tausiq.wordpress.com/category/acm-uva-algorithm/feed/"><script type="text/javascript">/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script> <style type="text/css" style="display: none;">img.latex{border:none;vertical-align:middle;}.video-player{border:0;margin:auto;padding:5px;text-align:center;}.wpvidavee_title{font-family:Tahoma,Arial,sans-serif;font-size:10px;font-weight:bold;line-height:12px;padding:2px 5px;text-align:left;}.wpvidavee_footer{font-family:Tahoma,Arial,sans-serif;font-size:9px;line-height:11px;padding:2px 5px;text-align:right;}.wpvidavee_footer a{text-decoration:none;}.wpvidavee_p{color:red;}.hidden{display:none;}.possibly-related{clear:both;}.screen-reader-text{position:absolute;left:-1000em;}.comment object,.comment embed{max-width:100%;}
</style>
<style id="sharedaddy-css" media="all" type="text/css" style="display: none;">.sharing{padding:0 0 10px 0;}.sharing_label{line-height:24px;padding:10px 10px 0 0;float:left;font-weight:bold;}.sharing ul,.sharing-hidden ul{list-style:none outside none!important;padding:0!important;margin:0!important;float:left;text-indent:0!important;}.sharing li,.sharing-hidden li{display:list-item!important;list-style:none outside none!important;float:left;padding:10px 0 0 0!important;margin:0 10px 0 0!important;background:none!important;}.sharing li div,.sharing-hidden li div{margin:0!important;}.sharing li:before,.sharing-hidden li:before{content:none!important;}.sharing li a,.sharing-hidden li a{padding:0px 0 0 20px;line-height:24px;display:block;}.sharing li.share-regular a,.sharing-hidden li a,.sharing li.share-regular a:hover,.sharing-hidden li a:hover{border:none!important;}.share-custom a.sharing-anchor{color:#666;font-size:11px;font-family:arial,tahoma,verdana,sans-serif;text-decoration:none;}.sharing li.share-custom{}.sharing-hidden a{color:#666;}.sharing a.share-twitter,.sharing-hidden a.share-twitter{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/twitter.png') no-repeat center left;}.sharing a.share-facebook,.sharing-hidden a.share-facebook{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/facebook.png') no-repeat center left;}.sharing a.share-email,.sharing-hidden a.share-email{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/email.png') no-repeat center left;}.sharing a.share-digg,.sharing-hidden a.share-digg{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/digg.png') no-repeat center left;}.sharing a.share-stumbleupon,.sharing-hidden a.share-stumbleupon{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/stumbleupon.png') no-repeat center left;}.sharing a.share-reddit,.sharing-hidden a.share-reddit{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/reddit.png') no-repeat center left;}.sharing a.share-print,.sharing-hidden a.share-print{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/print.png') no-repeat center left;}.sharing a.share-press-this,.sharing-hidden a.share-press-this{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/wordpress.png') no-repeat center left;}.sharing a.share-linkedin,.sharing-hidden a.share-linkedin{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/linkedin.png') no-repeat center left;}.sharing a.share-google-plus-1,.sharing-hidden a.share-google-plus-1{background:url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/googleplus1.png') no-repeat center left;}.sharing div.twitter_button{padding:4px 0;}.sharing div.reddit_button{padding:4px 0 0 0;}.sharing div.stumbleupon_button{padding:4px;}.sharing div.digg_button{font-size:0px;padding:0 0 0 0;}.sharing div.facebook_button{font-size:0px;padding:5px 0;height:18px;}.sharing div.like_button{font-size:0px;padding:4px 0;height:18px;}.sharing div.linkedin_button{padding-top:4px;line-height:16px;}.sharing div.googleplus1_button{padding-top:4px;line-height:16px;}.sharing-hidden li{width:130px;}.sharing-hidden div.twitter_button{padding:0;}.sharing-hidden div.reddit_button{padding:0;}.sharing-hidden div.stumbleupon_button{padding:0;}.sharing-hidden div.digg_button{font-size:0px;padding:0;}.sharing-hidden div.facebook_button{font-size:0px;padding:0;}.sharing-hidden div.like_button{font-size:0px;padding:0;}.sharing-hidden div.linkedin_button{padding:0;}.sharing-hidden div.googleplus1_button{padding:0;}.sharing div.facebook_button a,.sharing-hidden.facebook_button a{line-height:none;padding:0;}#sharing_email{background-color:#fff;padding:15px;width:312px;position:absolute;border:2px solid #6e6e6e;z-index:1001;text-align:left;}#sharing_email .errors{color:#fff;background-color:#771a09;font-size:11px;padding:5px 8px;line-height:11px;margin:10px 0 0 0;}#sharing_email label{font-size:11px;color:#333;font-weight:bold;display:block;padding:0 0 4px 0;text-align:left;}#sharing_email input[type="text"]{width:100%;margin-bottom:12px;}#sharing_email .sharing_send{}#sharing_email .sharing_cancel{padding:0 0 0 10px;font-size:11px;}#sharing_email .recaptcha{width:312px;height:123px;margin:10px 0 14px 0;}#sharing_background{position:fixed;top:0;left:0;width:100%;height:100%;background-color:black;z-index:1000;}.sharing-hidden{padding:10px 0 0 0;}.sharing-hidden .inner{border:2px solid #6e6e6e;padding:15px 0 15px 0;background:#fff;position:absolute;top:0;left:0;margin:0px!important;width:300px;z-index:1000;}.sharing-hidden ul{background:white url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/share-bg.png') repeat-y center center;margin:0!important;}.sharing-hidden li{padding-left:10px!important;padding-right:10px!important;padding-top:0px!important;margin:0!important;margin-bottom:10px!important;}.sharing-hidden li a{padding-right:20px;font-size:11px;line-height:16px;display:block;text-decoration:none!important;border-bottom:0px!important;}.sharing-hidden li a.no-text{width:16px;height:16px;}.sharing li a.no-text{width:16px;height:16px;margin-top:4px;padding:0px!important;}.sharing li a.no-icon{background:none!important;padding-left:0!important;}.sharing li.share-end,.sharing-hidden li.share-end{clear:both;height:0;padding:0px!important;margin:0px!important;width:0;visibility:hidden;float:none;}.sharing .sharing-anchor{border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px;border:1px solid #d8d8d8;float:left;line-height:20px;padding:0 8px 0 21px;background:#fff url('http://s2.wp.com/wp-content/mu-plugins/post-react-1/sharing/images/sharing-hidden.png') no-repeat 0px center;font-weight:normal;}.sharing-clear{clear:left;}.response{}.response-title{font-size:12px;line-height:18px;font-weight:bold;}.response-sub{font-size:11px;line-height:24px;}.response-close .sharing_cancel{padding:0px!important;}li.share-email,li.share-custom a.sharing-anchor{display:none!important;}li.share-service-visible{display:list-item!important;}li.share-custom a.sharing-anchor.share-service-visible{display:inline!important;}body.rtl .sharing ul{float:right;}body.rtl .sharing li{margin:0 0 0 10px!important;}
</style>
<script type="text/javascript" style="display: none;">function convertEntities(b){var d,a;d=function(c){if(/&[^;]+;/.test(c)){var f=document.createElement("div");f.innerHTML=c;return!f.firstChild?c:f.firstChild.nodeValue}return c};if(typeof b==="string"){return d(b)}else{if(typeof b==="object"){for(a in b){if(typeof b[a]==="string"){b[a]=d(b[a])}}}}return b};</script> <script type="text/javascript" src="13_files/jquery.js"></script> <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://tausiq.wordpress.com/xmlrpc.php?rsd"><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://tausiq.wordpress.com/wp-includes/wlwmanifest.xml"><link rel="index" title="Solved Programming Problems" href="http://tausiq.wordpress.com/"><meta name="generator" content="WordPress.com"><link rel="shortcut icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1306998934g" sizes="16x16 24x24 32x32 48x48"><link rel="icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1306998934g" sizes="16x16 24x24 32x32 48x48"><link rel="apple-touch-icon" href="http://s0.wp.com/wp-content/themes/h4/i/webclip.png?m=1306998996g"><link rel="openid.server" href="http://tausiq.wordpress.com/?openidserver=1"><link rel="openid.delegate" href="http://tausiq.wordpress.com/"><link rel="search" type="application/opensearchdescription+xml" href="http://tausiq.wordpress.com/osd.xml" title="Solved Programming Problems"><link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com"><script type="text/javascript" src="13_files/vak8bjj.htm"></script><script type="text/javascript">try{Typekit.load();}catch(e){}</script> <style type="text/css">body{background-color:#e0efcf;}</style> <style type="text/css">#header{background:#FFFFFF url(http://tausiq.files.wordpress.com/2011/04/cropped-yooo5o0-anoko-xp.jpg) no-repeat;}#header h1,#header h1 a,#header h1 a:visited,#header h4,#header h4 a,#header h4 a:visited,.header-left{color:#ffffff;}</style> <style type="text/css">/**/div#likes{margin-top:15px;}.like-button{border:1px solid #eee;padding:2px 6px;font-size:13px;font-family:arial,tahoma,sans-serif;}#wpl-likebox{clear:left;font-size:11px;font-family:arial,tahoma,verdana,sans-serif!important;min-height:30px;margin:10px 0!important;padding:5px 0 10px 0!important;}#wpl-button{float:left;background:url(http://s0.wp.com/i/buttonbg.png) top left repeat-x;margin-right:7px;border:1px solid #d4d4d4;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#wpl-button a{border-bottom:none!important;color:#666!important;line-height:130%!important;text-decoration:none!important;outline:none;float:left;padding:3px 6px 2px 24px!important;font-size:11px!important;background:url(http://s1.wp.com/i/likestar.png) 6px 49.8% no-repeat;}#wpl-button a:hover{border-bottom:none!important;}#wpl-button.liked{background:#feffce;border:1px solid #f3e389;}#wpl-button.liked a{color:#ba871b!important;}#wpl-likebox #wpl-count{min-height:25px;line-height:130%!important;float:left;padding-top:4px;}#wpl-likebox #wpl-avatars{clear:left;max-height:98px;overflow:hidden;margin-top:15px;line-height:130%!important;}#wpl-likebox #wpl-avatars img{border:none!important;}#wpl-likebox #wpl-mustlogin{line-height:14px!important;font-size:11px;clear:left;margin-top:5px;background:#f0f0f0;padding:10px;width:65%;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#wpl-likebox #wpl-mustlogin a{color:#888;text-decoration:underline;}#wpl-likebox #wpl-mustlogin p{margin:5px 0;padding:0}#wpl-likebox #wpl-mustlogin input.input{padding:2px;background:#fff;font-size:11px;font-family:inherit;border:1px solid #ccc;-moz-box-shadow:1px 1px 1px rgba(0,0,0,0.1) inset;-webkit-box-shadow:1px 1px 1px rgba(0,0,0,0.1) inset;line-height:12px;}#wpl-likebox #wpl-mustlogin input#wp-submit{border:1px solid #ccc;font-size:11px;background:#fafafa;repeat-x;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;padding:2px 4px!important;line-height:12px;}#wpl-likebox #wpl-mustlogin label{position:relative;cursor:text;}#wpl-likebox #wpl-mustlogin label span{position:absolute;top:0px;left:5px;padding:0!important;}#wpl-likebox #wpl-mustlogin label span{top /**/:-10px\9;}/**/</style> <meta name="application-name" content="Solved Programming Problems"><meta name="msapplication-window" content="width=device-width;height=device-height"><meta name="msapplication-tooltip" content="à¦à¦¨à§à¦¤à¦¹à§à¦¨ à¦à§à¦à§ à¦à¦²à¦¾, à¦à¦¬à¦¿à¦°à¦¾à¦® à¦à§à¦¬à¦¨à§à¦° à¦à¦°à§à¦¥ à¦à§à¦à§ à¦«à§à¦°à¦¾"><meta name="msapplication-task" content="name=Subscribe;action-uri=http://tausiq.wordpress.com/feed/;icon-uri=http://s1.wp.com/i/favicon-stacked.ico"><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><link href="13_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link rel="stylesheet" type="text/css" id="gravatar-card-css" href="13_files/hovercard.css"><link rel="stylesheet" type="text/css" id="gravatar-card-services-css" href="13_files/services.css"></head><body class="archive paged category category-acm-uva-algorithm category-16700319 paged-13 category-paged-13 typekit-enabled highlander-enabled highlander-light"><div id="header"><div class="header-left"><h4><a href="http://tausiq.wordpress.com/">Solved Programming Problems</a></h4><p id="description">à¦à¦¨à§à¦¤à¦¹à§à¦¨ à¦à§à¦à§ à¦à¦²à¦¾, à¦à¦¬à¦¿à¦°à¦¾à¦® à¦à§à¦¬à¦¨à§à¦° à¦à¦°à§à¦¥ à¦à§à¦à§ à¦«à§à¦°à¦¾</p></div><div class="header-right"><form method="get" id="searchform" action="http://tausiq.wordpress.com/"><div><label class="hidden" for="s">Search:</label> <input name="s" id="s" type="text"> <input id="searchsubmit" value="Go" type="submit"></div></form></div></div><div id="access"><div id="nav"><div id="supernav" class="navleft nav"><div class="menu"><ul><li><a href="http://tausiq.wordpress.com/" title="Home">Home</a></li><li class="page_item page-item-1064"><a href="http://tausiq.wordpress.com/easy-problems/" title="Easy&nbsp;Problems">Easy&nbsp;Problems</a></li><li class="page_item page-item-1806"><a href="http://tausiq.wordpress.com/full-index/" title="Full&nbsp;Index">Full&nbsp;Index</a></li><li class="page_item page-item-1774"><a href="http://tausiq.wordpress.com/index-uva/" title="Introducing&nbsp;(UVa)">Introducing&nbsp;(UVa)</a></li></ul></div></div><div class="navright"><a class="rsslink" rel="nofollow" href="http://tausiq.wordpress.com/feed/">Posts</a> <a class="rsslink" rel="nofollow" href="http://tausiq.wordpress.com/comments/feed/">Comments</a></div></div><div id="subnav" class="subnav nav"><div class="menu"><ul><li class="cat-item cat-item-16700319 current-cat"><a href="http://tausiq.wordpress.com/category/acm-uva-algorithm/" title="View all posts filed under ACM (UVa) Algorithm">ACM (UVa) Algorithm</a> </li><li class="cat-item cat-item-22469398"><a href="http://tausiq.wordpress.com/category/acm-tju/" title="View all posts filed under ACM (TJU)">ACM (TJU)</a> </li><li class="cat-item cat-item-13746102"><a href="http://tausiq.wordpress.com/category/easy-problems/" title="View all posts filed under Easy Problems">Easy Problems</a> </li><li class="cat-item cat-item-6666323"><a href="http://tausiq.wordpress.com/category/hdu/" title="View all posts filed under HDU">HDU</a> </li><li class="cat-item cat-item-55330922"><a href="http://tausiq.wordpress.com/category/timus-online-judge/" title="View all posts filed under Timus Online Judge">Timus Online Judge</a> </li><li class="cat-item cat-item-16855379"><a href="http://tausiq.wordpress.com/category/project-euler-algorithm/" title="View all posts filed under Project Euler Algorithm">Project Euler Algorithm</a> </li><li class="cat-item cat-item-16855813"><a href="http://tausiq.wordpress.com/category/stl-documentation/" title="View all posts filed under STL documentation">STL documentation</a> </li><li class="cat-item cat-item-16232684"><a href="http://tausiq.wordpress.com/category/codechef/" title="View all posts filed under CodeChef">CodeChef</a> </li><li class="cat-item cat-item-74936"><a href="http://tausiq.wordpress.com/category/usaco/" title="View all posts filed under USACO">USACO</a> </li><li class="cat-item cat-item-1017"><a href="http://tausiq.wordpress.com/category/java/" title="View all posts filed under Java">Java</a> </li></ul></div></div></div><div id="wrap"><div id="content"><div id="content-left"><div class="post-2394 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/14/uva-10703-free-spots/">UVa : 10703 (Free&nbsp;spots)</a></h2><div class="post-info"><p><span class="time">September 14, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/14/uva-10703-free-spots/#respond">Leave a Comment</a></span></p></div><p><strong><span><span style="font-size: small;">Title : Free spots</span></span></strong></p><p><strong><span><span style="font-size: small;">Link :</span></span></strong><span><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/107/10703.html">http://uva.onlinejudge.org/external/107/10703.html</a> </span></span></p><p><strong><span><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span><span style="font-size: small;">Follow
then N lines, composed of four integers X1, Y1, X2, Y2, such that (X1,
Y1) and (X2, Y2) are the positions of two opposite corners of a
sub-board. </span></span></li><li><span><span style="font-size: small;">Output format.</span></span></li></ol><p><strong><span><span style="font-size: small;">Analysis :</span></span></strong><span><span style="font-size: small;"> </span></span></p><ol><li><span><span style="font-size: small;">make a board and initialize it with false </span></span></li><li><span><span style="font-size: small;">mark every sub-rectangle true and then count </span></span></li></ol><p><span><strong><span><span style="font-size: small;">Runtime :</span></span></strong><span><span style="font-size: small;"> 0.016s </span></span></span></p><div class="syntaxhighlighter  plain" id="highlighter_689485"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_689485_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_689485" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="plain plain">Critical input :</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="plain plain">15 10 3</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="plain plain">3 3 7 1</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="plain plain">7 8 3 6</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="plain plain">7 11 3 13</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="plain plain">0 0 0</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="plain plain">Critical Output :</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain plain">There are 120 empty spots.</code></td></tr></tbody></table></div></div></div><p><span><strong><span><span style="font-size: small;">Solution :</span></span></strong><span><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_820218"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_820218_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_820218" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483647</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp color1 bold">bool</code> <code class="cpp plain">a [500 + 5] [500 + 5];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">X1, Y1, X2, Y2;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">make_consistent ()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( X1 &gt; X2 &amp;&amp; Y1 &lt;= Y2 ) swap (X1, X2);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code> <code class="cpp plain">( X1 &gt;= X2 &amp;&amp; Y1 &gt;= Y2 ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap (X1, X2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap (Y1, Y2);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code> <code class="cpp plain">( X1 &lt;= X2 &amp;&amp; Y1 &gt; Y2 ) swap (Y1, Y2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">reset ()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 505; i++ ) </code><code class="cpp functions bold">memset</code> <code class="cpp plain">(a [i], </code><code class="cpp keyword bold">false</code><code class="cpp plain">, </code><code class="cpp keyword bold">sizeof</code> <code class="cpp plain">(a [i]));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">w, h, n;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d"</code><code class="cpp plain">, &amp;w, &amp;h, &amp;n) ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( w == 0 &amp;&amp; h == 0 &amp;&amp; n == 0 ) </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">reset ();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; n; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>56</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d %d"</code><code class="cpp plain">, &amp;X1, &amp;Y1, &amp;X2, &amp;Y2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>57</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">make_consistent ();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>58</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>59</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = X1; j &lt;= X2; j++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>60</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">k = Y1; k &lt;= Y2; k++ ) a [j] [k] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>61</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>62</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>63</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>64</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>65</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">res = 0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>66</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>67</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 1; i &lt;= w; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>68</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 1; j &lt;= h; j++ ) </code><code class="cpp keyword bold">if</code> <code class="cpp plain">( a [i] [j] == </code><code class="cpp keyword bold">false</code> <code class="cpp plain">) res++;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>69</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>70</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>71</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( res == 0 ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"There is no empty spots.\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>72</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code> <code class="cpp plain">( res == 1 ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"There is one empty spot.\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>73</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"There are %d empty spots.\n"</code><code class="cpp plain">, res);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>74</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>75</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>76</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>77</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>78</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>79</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2392 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/02/uva-485-pascals-triangle-of-death/">UVa : 485 (Pascalâs Triangle of&nbsp;Death)</a></h2><div class="post-info"><p><span class="time">September 2, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/02/uva-485-pascals-triangle-of-death/#respond">Leave a Comment</a></span></p></div><p><!--//--><a name="SECTION0001000000000000000000"></a><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Title : </span></span></span></strong><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;"><strong>Pascalâs Triangle of Death</strong></span></span></span></strong></p><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Link :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/4/485.html">http://uva.onlinejudge.org/external/4/485.html</a> </span></span></span></p><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Tricky Lines :</span></span></span></strong></p><ol><li><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">When any number in the triangle is exceeds or equals 10<sup>60</sup>, your program should finish printing the current row and exit. </span></span></span></li></ol><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Analysis :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> </span></span></span></p><ol><li><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">from third row,<br>each number = num [row â 1] [col] + num [row â 1] [col â 1]<br>except 1<sup>st</sup> and last 1</span></span></span></li> <li><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Big Integer </span></span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Runtime :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> 1.232s </span></span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Solution :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> </span></span></span></span></p><div class="syntaxhighlighter  java" id="highlighter_871751"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_871751_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_871751" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="java keyword">import</code> <code class="java plain">java.math.BigInteger;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="java keyword">import</code> <code class="java plain">java.util.Scanner;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Main {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java preprocessor">/**</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java preprocessor">* @param args</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java preprocessor">*/</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// TODO Auto-generated method stub</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">BigInteger current [] = </code><code class="java keyword">new</code> <code class="java plain">BigInteger [</code><code class="java value">10000</code><code class="java plain">];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">BigInteger next [] = </code><code class="java keyword">new</code> <code class="java plain">BigInteger [</code><code class="java value">10000</code><code class="java plain">];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">BigInteger end = BigInteger.TEN;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">( </code><code class="java keyword">int</code> <code class="java plain">i = </code><code class="java value">2</code><code class="java plain">; i &lt;= </code><code class="java value">60</code><code class="java plain">; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">end = end.multiply(BigInteger.TEN);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">current [</code><code class="java value">0</code><code class="java plain">] = current [</code><code class="java value">1</code><code class="java plain">] = BigInteger.ONE;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println (</code><code class="java value">1</code><code class="java plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println (</code><code class="java string">"1"</code> <code class="java plain">+ </code><code class="java string">" "</code> <code class="java plain">+ </code><code class="java string">"1"</code><code class="java plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">line = </code><code class="java value">1</code><code class="java plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">boolean</code> <code class="java plain">stop = </code><code class="java keyword">true</code><code class="java plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">( ; stop ; ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next [</code><code class="java value">0</code><code class="java plain">] = BigInteger.ONE;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">( </code><code class="java keyword">int</code> <code class="java plain">i = </code><code class="java value">1</code><code class="java plain">; i &lt;= line; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next [i] = current [i].add(current [i - </code><code class="java value">1</code><code class="java plain">]);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">( next [i].compareTo(end) &gt;= </code><code class="java value">0</code> <code class="java plain">) stop = </code><code class="java keyword">false</code><code class="java plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next [++line] = BigInteger.ONE;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">( </code><code class="java keyword">int</code> <code class="java plain">i = </code><code class="java value">0</code><code class="java plain">; i &lt; line; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.print (next [i] + </code><code class="java string">" "</code><code class="java plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">current [i] = next [i];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println (</code><code class="java value">1</code><code class="java plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">current [line] = BigInteger.ONE;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="java plain">}</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2390 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/02/uva-10465-homer-simpson/">UVa : 10465 (Homer&nbsp;Simpson)</a></h2><div class="post-info"><p><span class="time">September 2, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/02/uva-10465-homer-simpson/#respond">Leave a Comment</a></span></p></div><p><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"><strong>Title :</strong></span></span></strong><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> </span></span></strong><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Homer Simpson </span></span></strong></p><p><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/104/10465.html">http://uva.onlinejudge.org/external/104/10465.html</a> </span></span></p><p><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">print in a single line the maximum number of burgers Homer can eat without having beer. </span></span></li><li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">If homer must have beer, then also print the time he gets for drinking, separated by a single space. </span></span></li></ol><p><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">this problem has tags : number theory, gcd, diophantine equation. Though iâve solve it with dp, becoz iâm not good at dp</span></span></li> <li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">array times [n] = highest number of burgers Homer can have in time ânâ</span></span></li> <li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">surely, times [m] = times [n] = 1</span></span></li> <li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">if ( times [k] &gt; 0 ) then<br>times [k + m] = times [k] + 1;</span></span></li> <li><span style="font-family: Consolas,monospace;"><span style="font-size: small;">at last, if ( times [t] &gt; 0 ) then print times [t]<br>otherwise, find the first time, k ( k &lt; t )<br>such that, times [k] &gt; 0 </span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> 0.208s </span></span></span></p><div class="syntaxhighlighter  plain" id="highlighter_188487"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_188487_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_188487" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="plain plain">Critical Input :</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="plain plain">852 965 9999</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="plain plain">96 52 50</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="plain plain">48 52 55</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="plain plain">6 9 96</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="plain plain">3 5 2</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="plain plain">3 5 4</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="plain plain">Critical output :</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain plain">11 62</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="plain plain">0 50</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="plain plain">1 3</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="plain plain">16</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="plain plain">0 2</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="plain plain">1 1</code></td></tr></tbody></table></div></div></div><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: Consolas,monospace;"><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_297634"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_297634_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_297634" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define long long LL</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">m, n, t;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d"</code><code class="cpp plain">, &amp;m, &amp;n, &amp;t) != EOF ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">times [10000 + 10];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">memset</code> <code class="cpp plain">(times, 0, </code><code class="cpp keyword bold">sizeof</code> <code class="cpp plain">(times));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( m &gt; n ) swap (m, n);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">times [m] = 1;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">times [n] = 1;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = m; i &lt;= t; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( times [i] ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( i + m &lt;= t ) times [i + m] = max ( times [i + m], times [i] + 1);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( i + n &lt;= t ) times [i + n] = max ( times [i + n], times [i] + 1);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( times [t] &gt; 0 ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%d\n"</code><code class="cpp plain">, times [t]);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">printed = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = t - 1; i &gt;= 0; i-- ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( times [i] &gt; 0 ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d\n"</code><code class="cpp plain">, times [i], t - i);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printed = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>56</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>57</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( !printed ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"0 %d\n"</code><code class="cpp plain">, t);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>58</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>59</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>60</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>61</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>62</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>63</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>64</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2387 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/02/uva-124-following-orders/">UVa : 124 (Following&nbsp;Orders)</a></h2><div class="post-info"><p><span class="time">September 2, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/02/uva-124-following-orders/#respond">Leave a Comment</a></span></p></div><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : Following Orders</span></span></strong></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/1/124.html">http://uva.onlinejudge.org/external/1/124.html</a> </span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Orderings are printed in lexicographical (alphabetical) order </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Output for different constraint specifications is separated by a blank line. </span></span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">backtracking </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">sort the variables </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">keep an 2d array âconstraintâ<br>constraint [m] [n] = true, if m &lt; n<br>so when constraint [n] [m] == true, u must not go further </span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.008s </span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_577239"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_577239_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_577239" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>001</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>002</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>003</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>004</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>005</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>006</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>007</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>008</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>009</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>010</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>011</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>012</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>013</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>014</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>015</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>016</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>017</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>018</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>019</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>020</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>021</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>022</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>023</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>024</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>025</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>026</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">variable_length;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>027</code></td><td class="content"><code class="cpp color1 bold">bool</code> <code class="cpp plain">constraint [26 + 5] [26 + 5];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>028</code></td><td class="content"><code class="cpp color1 bold">bool</code> <code class="cpp plain">avail [26 + 5];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>029</code></td><td class="content"><code class="cpp color1 bold">char</code> <code class="cpp plain">output [30];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>030</code></td><td class="content"><code class="cpp color1 bold">char</code> <code class="cpp plain">variable [30];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>031</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>032</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">reset ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>033</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>034</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 26 + 5; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>035</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">memset</code> <code class="cpp plain">(constraint [i], </code><code class="cpp keyword bold">false</code><code class="cpp plain">, </code><code class="cpp keyword bold">sizeof</code> <code class="cpp plain">(constraint [i]));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>036</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">memset</code> <code class="cpp plain">(avail, </code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp keyword bold">sizeof</code> <code class="cpp plain">(avail));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>037</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>038</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>039</code></td><td class="content"><code class="cpp color1 bold">bool</code> <code class="cpp plain">check_constraint (</code><code class="cpp color1 bold">int</code> <code class="cpp plain">len, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">in)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>040</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>041</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; len; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>042</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( constraint [in] [output [i] - </code><code class="cpp string">'a'</code><code class="cpp plain">] == </code><code class="cpp keyword bold">true</code> <code class="cpp plain">) </code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>043</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>044</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>045</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>046</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>047</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>048</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">bktk (</code><code class="cpp color1 bold">int</code> <code class="cpp plain">len)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>049</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>050</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( len == variable_length ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>051</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; len; i++ ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">, output [i]);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>052</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>053</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>054</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>055</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>056</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; variable_length; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>057</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( avail [i] &amp;&amp; check_constraint (len, variable [i] - </code><code class="cpp string">'a'</code><code class="cpp plain">) ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>058</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">output [len] = variable [i];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>059</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">avail [i] = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>060</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">bktk (len + 1);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>061</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">avail [i] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>062</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>063</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>064</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>065</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>066</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>067</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>068</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">input [500];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>069</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">blank = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>070</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>071</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">gets</code> <code class="cpp plain">(input) ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>072</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">variable_length = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>073</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>074</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; input [i]; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>075</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( </code><code class="cpp functions bold">isalpha</code> <code class="cpp plain">(input [i]) ) variable [variable_length++] = input [i];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>076</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>077</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sort (variable, variable + variable_length);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>078</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>079</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">reset ();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>080</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>081</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code> <code class="cpp plain">(input);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>082</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">first;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>083</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">second;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>084</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>085</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; input [i]; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>086</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( </code><code class="cpp functions bold">isalpha</code> <code class="cpp plain">(input [i]) ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>087</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">first = input [i];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>088</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">i++;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>089</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( !</code><code class="cpp functions bold">isalpha</code> <code class="cpp plain">(input [i]) ) i++;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>090</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">second = input [i];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>091</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">constraint [first - </code><code class="cpp string">'a'</code><code class="cpp plain">] [second - </code><code class="cpp string">'a'</code><code class="cpp plain">] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>092</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>093</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>094</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>095</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( blank ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>096</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blank = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>097</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>098</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">bktk (0);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>099</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>100</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>101</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>102</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>103</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>104</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2383 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/02/uva-574-sum-it-up/">UVa : 574 (Sum It&nbsp;Up)</a></h2><div class="post-info"><p><span class="time">September 2, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/02/uva-574-sum-it-up/#respond">Leave a Comment</a></span></p></div><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : Sum It Up</span></span></strong></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/5/574.html">http://uva.onlinejudge.org/external/5/574.html</a> </span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">A number can be used within a sum as many times as it appears in the list, and a single number counts as a sum. </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">If <em>n</em> = 0 it signals the end of the input </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><span style="font-family: DejaVu Sans Condensed,sans-serif;">if there are no sums, output the line `</span><tt><span style="font-family: DejaVu Sans Condensed,sans-serif;">NONE</span></tt><span style="font-family: DejaVu Sans Condensed,sans-serif;">â </span></span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">The numbers within each sum must appear in non-increasing order. </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">all sums must be distinct; the same sum cannot appear twice </span></span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">check all possible combination, as there are only 2^12 combination possible.</span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.020s </span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_12755"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_12755_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_12755" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>001</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>002</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>003</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>004</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>005</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>006</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>007</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>008</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>009</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>010</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>011</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>012</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>013</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>014</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>015</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>016</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>017</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>018</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>019</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>020</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>021</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>022</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>023</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>024</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>025</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>026</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">b [12 + 5];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>027</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>028</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">binary_conv (</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>029</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>030</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">memset</code> <code class="cpp plain">(b, 0, </code><code class="cpp keyword bold">sizeof</code> <code class="cpp plain">(b));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>031</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>032</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">index = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>033</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>034</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( i ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>035</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">b [index++] = i % 2;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>036</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">i /= 2;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>037</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>038</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>039</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">reverse (b, b + 17);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>040</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>041</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>042</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>043</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>044</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">t, n;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>045</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>046</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d"</code><code class="cpp plain">, &amp;t, &amp;n) ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>047</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( n == 0 ) </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>048</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>049</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n_arr [12 + 5];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>050</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">map &lt;string, </code><code class="cpp color1 bold">bool</code><code class="cpp plain">&gt; printed_once;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>051</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">string save_sort [5000];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>052</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">in_save = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>053</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>054</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; n; i++ ) </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;n_arr [i]);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>055</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>056</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sort (n_arr, n_arr + n);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>057</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>058</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">limit = 1 &lt;&lt; n;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>059</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>060</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"Sums of %d:\n"</code><code class="cpp plain">, t);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>061</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">none = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>062</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>063</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = limit - 1; i &gt;= 1; i-- ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>064</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">binary_conv (i);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>065</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">sum = 0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>066</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">plus = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>067</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>068</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 16; 16 - j &lt; n; j-- )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>069</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( b [j] ) { sum += n_arr [ n - (16 - j) - 1 ]; plus++; }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>070</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>071</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">string output = </code><code class="cpp string">""</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>072</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">token [20];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>073</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>074</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( sum == t ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>075</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 16; 16 - j &lt; n; j-- ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>076</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( b [j] ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>077</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">sprintf</code> <code class="cpp plain">(token, </code><code class="cpp string">"%d"</code><code class="cpp plain">, n_arr [n - (16 - j) - 1]);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>078</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">output += token;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>079</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( plus &gt; 1 ) output += </code><code class="cpp string">'+'</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>080</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">plus--;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>081</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">none = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>082</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>083</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>084</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( printed_once [output] == </code><code class="cpp keyword bold">false</code> <code class="cpp plain">) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>085</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printed_once [output] = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>086</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">save_sort [in_save++] = output;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>087</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>088</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>089</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>090</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>091</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( none ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"NONE\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>092</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>093</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sort (save_sort, save_sort + in_save);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>094</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = in_save - 1; i &gt;= 0; i-- )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>095</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout &lt;&lt; save_sort [i] &lt;&lt; endl;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>096</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>097</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>098</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>099</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>100</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>101</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>102</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2379 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/01/uva-482-permutation-arrays/">UVa : 482 (Permutation&nbsp;Arrays)</a></h2><div class="post-info"><p><span class="time">September 1, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/01/uva-482-permutation-arrays/#respond">Leave a Comment</a></span></p></div><p><a name="SECTION0001000000000000000000"></a><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : </span></span></span></strong><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Permutation Arrays</strong></span></span></span></strong><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></strong></p><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/4/482.html">http://uva.onlinejudge.org/external/4/482.html</a> </span></span></span></p><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></span></strong></p><ol><li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">This line is followed by a blank line, and there is also a blank line between two consecutive inputs.<br>The outputs of two consecutive cases will be separated by a blank line.</span></span></span></li></ol><p><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></p><ol><li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">first line gives you the index numbers and second line the values </span></span></span></li><li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">as there is no indication number of input numbers, may be there is no other way to take the input as string </span></span></span></li><li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">after taking input as string, u need to parse the index value as integer</span></span></span></li> <li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">to avoid precision problem, take the second lines values as string </span></span></span></li><li><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">just sort it, based on index number and print </span></span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.024s </span></span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></span></strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_841762"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_841762_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_841762" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp keyword bold">struct</code> <code class="cpp plain">array {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">in;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">string num;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="cpp plain">} a [10000];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="cpp color1 bold">bool</code> <code class="cpp plain">cmp (array x, array y)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( x.in &lt; y.in ) </code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">testCase;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;testCase);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">getchar</code> <code class="cpp plain">();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">blank = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( testCase-- ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">input [100000];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code> <code class="cpp plain">(input);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code> <code class="cpp plain">(input);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*pch = </code><code class="cpp functions bold">strtok</code> <code class="cpp plain">(input, </code><code class="cpp string">" "</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">index = 0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( pch != NULL ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a [index].in = </code><code class="cpp functions bold">atoi</code> <code class="cpp plain">(pch);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pch = </code><code class="cpp functions bold">strtok</code> <code class="cpp plain">(NULL, </code><code class="cpp string">" "</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>56</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">index++;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>57</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>58</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>59</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code> <code class="cpp plain">(input);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>60</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>61</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pch = </code><code class="cpp functions bold">strtok</code> <code class="cpp plain">(input, </code><code class="cpp string">" "</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>62</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">index = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>63</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>64</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( pch != NULL ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>65</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a [index].num = pch;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>66</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pch = </code><code class="cpp functions bold">strtok</code> <code class="cpp plain">(NULL, </code><code class="cpp string">" "</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>67</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">index++;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>68</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>69</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>70</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sort (a, a + index, cmp);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>71</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>72</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( blank ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>73</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blank = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>74</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>75</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; index; i++ )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>76</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout &lt;&lt; a [i].num &lt;&lt; endl;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>77</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>78</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>79</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>80</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>81</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>82</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2374 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/01/uva-558-wormholes/">UVa : 558&nbsp;(Wormholes)</a></h2><div class="post-info"><p><span class="time">September 1, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/01/uva-558-wormholes/#respond">3 Comments</a></span></p></div><p><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Title : Wormholes</strong></span></span></p><p><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Link : </strong></span></span><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><a href="http://uva.onlinejudge.org/external/5/558.html">http://uva.onlinejudge.org/external/5/558.html</a> </span></span></p><p><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Tricky Lines :</strong></span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">starting from our solar system, it is always possible to end up in any star system by following a sequence of wormholes </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Between any pair of star systems, there is at most one wormhole in either direction. </span></span></li></ol><p><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Analysis :</strong></span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Bellman-ford algorithm ( <a href="http://compprog.wordpress.com/2007/11/29/one-source-shortest-path-the-bellman-ford-algorithm/">http://compprog.wordpress.com/2007/11/29/one-source-shortest-path-the-bellman-ford-algorithm/</a> )</span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Runtime :</strong></span></span> <span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">0.040s </span></span></span></p><p><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Solution :</strong></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_135331"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_135331_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_135331" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp keyword bold">struct</code> <code class="cpp plain">edges</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">u;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">v;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">w;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="cpp plain">} e [2000 + 10];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">testCase;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;testCase);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( testCase-- ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n, m;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d"</code><code class="cpp plain">, &amp;n, &amp;m);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; m; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d"</code><code class="cpp plain">, &amp;e [i].u, &amp;e [i].v, &amp;e [i].w);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">d [1000 + 10];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt;= n; i++ ) d [i] = INT_MAX;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">d [0] = 0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; n - 1; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 0; j &lt; m; j++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( d [e [j].u] + e [j].w &lt; d [e [j].v] )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">d [e [j].v] = d [e [j].u] + e [j].w;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>56</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>57</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">have_negative_cycle = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>58</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>59</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 0; j &lt; m; j++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>60</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( d [e [j].u] + e [j].w &lt; d [e [j].v] )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>61</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">have_negative_cycle = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>62</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>63</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>64</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( have_negative_cycle ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"possible\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>65</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"not possible\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>66</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>67</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>68</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>69</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>70</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>71</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2366 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/09/01/uva-10190-divide-but-not-quite-conquer/">UVa : 10190 (Divide, But Not Quite&nbsp;Conquer!)</a></h2><div class="post-info"><p><span class="time">September 1, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/09/01/uva-10190-divide-but-not-quite-conquer/#respond">Leave a Comment</a></span></p></div><p><a name="SECTION0001000000000000000000"></a><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : </span></span></strong><strong><span style="color: rgb(0, 0, 0);"><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><strong>Divide, But Not Quite Conquer!</strong></span></span></span></strong></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> http://uva.onlinejudge.org/external/101/10190.html</span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;">When the sequence doesnât exist we think itâs not fun and, thus, very boring! </span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;">Each line will consist of two non-negative integers n,m which are both less than 2000000000. </span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;">n and m : two non-negative integer, (n, m) &gt;= 0<br>if ( n &lt; 2 || m &lt; 2 || m &gt; n ) output Boring!</span></li> <li><span style="font-family: DejaVu Sans Condensed,sans-serif;">Otherwise, simulate the process<br>at any point if n % m != 0, output Boring!<br>Else print the sequence</span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.012s </span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_359181"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_359181_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_359181" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">m;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d"</code><code class="cpp plain">, &amp;n, &amp;m) != EOF ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( n &lt; 2 || m &lt; 2 || m &gt; n ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"Boring!\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">vector &lt;</code><code class="cpp color1 bold">int</code><code class="cpp plain">&gt; output;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">boring = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( n &gt; 1 ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( n % m == 0 ) output.push_back (n);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp plain">boring = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">n /= m;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">output.push_back (1);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( boring == </code><code class="cpp keyword bold">true</code> <code class="cpp plain">) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"Boring!\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">space = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">size_t</code> <code class="cpp plain">i = 0; i &lt; output.size (); i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( space ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">" "</code><code class="cpp plain">); space = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, output [i]);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2364 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/08/31/uva-10048-audiophobia/">UVa : 10048&nbsp;(Audiophobia)</a></h2><div class="post-info"><p><span class="time">August 31, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/08/31/uva-10048-audiophobia/#respond">Leave a Comment</a></span></p></div><p><a name="SECTION0001000000000000000000"></a><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : Audiophobia</span></span></strong></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/100/10048.html">http://uva.onlinejudge.org/external/100/10048.html</a> </span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><span style="font-family: DejaVu Sans Condensed,sans-serif;">If there exists no path between them just print the line â</span><tt><span style="font-family: DejaVu Sans Condensed,sans-serif;">no path</span></tt><span style="font-family: DejaVu Sans Condensed,sans-serif;">â. </span></span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"><span style="font-family: DejaVu Sans Condensed,sans-serif;">Print a blank line between two consecutive test cases. </span></span></span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">floyd warshall minimax problem. You donât need to find the shortest path but any path that allows you to take less decibels </span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">fill up your cost array with a high number, for example INT_MAX<br>at the end if decibels of any two city is still INT_MAX then print âno pathâ</span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.024s </span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_418715"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_418715_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_418715" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">d [100 + 5] [100 + 5];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="cpp keyword bold">void</code> <code class="cpp plain">reset (</code><code class="cpp color1 bold">int</code> <code class="cpp plain">c)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt;= c; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 0; j &lt;= c; j++ )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">d [i] [j] = INT_MAX;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">c, s, q;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">cases = 0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">blank = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( </code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d"</code><code class="cpp plain">, &amp;c, &amp;s, &amp;q) ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( c == 0 &amp;&amp; s == 0 &amp;&amp; q == 0 ) </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">reset (c);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">c1, c2, deci;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; s; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d %d"</code><code class="cpp plain">, &amp;c1, &amp;c2, &amp;deci);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">d [c1] [c2] = d [c2] [c1] = deci;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">k = 1; k &lt;= c; k++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>54</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 1; i &lt;= c; i++ ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>55</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 1; j &lt;= c; j++ )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>56</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">d [i] [j] = d [j] [i] = min (d [i] [j], max (d [i] [k], d [k] [j]));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>57</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>58</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>59</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>60</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( blank ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>61</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blank = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>62</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>63</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"Case #%d\n"</code><code class="cpp plain">, ++cases);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>64</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>65</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; q; i++ ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>66</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code> <code class="cpp plain">(</code><code class="cpp string">"%d %d"</code><code class="cpp plain">, &amp;c1, &amp;c2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>67</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( d [c1] [c2] == INT_MAX ) </code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"no path\n"</code><code class="cpp plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>68</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%d\n"</code><code class="cpp plain">, d [c1] [c2]);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>69</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>70</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>71</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>72</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>73</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>74</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>75</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="post-2358 post type-post status-publish format-standard hentry category-acm-uva-algorithm"><div class="entry"><h2><a href="http://tausiq.wordpress.com/2010/08/31/uva-10219-find-the-ways/">UVa : 10219 (Find the ways&nbsp;!)</a></h2><div class="post-info"><p><span class="time">August 31, 2010</span> <span class="author">by <a href="http://tausiq.wordpress.com/author/tausiq/" title="Posts by Tausiq" rel="author">Tausiq</a></span> <span class="post-comments"><a href="http://tausiq.wordpress.com/2010/08/31/uva-10219-find-the-ways/#respond">Leave a Comment</a></span></p></div><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Title : </span></span></strong><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Find the ways !</span></span></strong></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Link :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> <a href="http://uva.onlinejudge.org/external/102/10219.html">http://uva.onlinejudge.org/external/102/10219.html</a> </span></span></p><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Tricky Lines :</span></span></strong></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Each test case consists of one line containing two integers n (n&gt;=1) and k (1&lt;=&lt;k=&lt;n).<br>// no limit mentioned for the value of n</span></span></li> <li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">This number will always fit into an integer, i.e. it will be less than 2^31-1.<br>// persuading you to use integer variable <img src="13_files/icon_razz.gif" alt=":P" class="wp-smiley"> </span></span></li></ol><p><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Analysis :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></p><ol><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">u need to find the digits of nCk<br>number_of_digits = floor ( log10 (number) ) + 1</span></span></li> <li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">our output = floor ( log10 (nCk) ) + 1<br>nCk = n! / (k! (n â k)!)</span></span></li> <li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">n! = n * (n â 1) * (n â 2) * (n â 3) * â¦â¦ * 1<br>log10 (n!) = log10 (n) + log10 (n â 1) + log10 (n â 2) + â¦â¦ + log10 (1)<br></span></span></li><li><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">suppose, n = 10<br>k = 7<div id="attachment_2360" class="wp-caption aligncenter" style="width: 373px;"><a href="http://tausiq.files.wordpress.com/2010/08/eq.jpg"><img class="size-full wp-image-2360" title="equation" src="13_files/eq.jpg" alt="10C7" width="363" height="51"></a><p class="wp-caption-text">nCk (10C7)</p></div><p></p></span></span></li></ol><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Runtime :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> 0.012s </span></span></span></p><p><span style="font-family: DejaVu Sans,sans-serif;"><strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;">Solution :</span></span></strong><span style="font-family: DejaVu Sans Condensed,sans-serif;"><span style="font-size: small;"> </span></span></span></p><div class="syntaxhighlighter  cpp" id="highlighter_360215"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_360215_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_360215" menu="false" src="13_files/clipboard.swf" width="16" height="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="cpp comments">// @BEGIN_OF_SOURCE_CODE</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstdio&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="cpp preprocessor">#include &lt;algorithm&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cstring&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="cpp preprocessor">#include &lt;string&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cctype&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="cpp preprocessor">#include &lt;stack&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="cpp preprocessor">#include &lt;queue&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="cpp preprocessor">#include &lt;list&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="cpp preprocessor">#include &lt;vector&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="cpp preprocessor">#include &lt;map&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="cpp preprocessor">#include &lt;sstream&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="cpp preprocessor">#include &lt;cmath&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="cpp preprocessor">#include &lt;bitset&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="cpp preprocessor">#include &lt;utility&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="cpp preprocessor">#include &lt;set&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="cpp preprocessor">#define INT_MAX 2147483647</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="cpp preprocessor">#define INT_MIN -2147483648</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="cpp preprocessor">#define pi acos(-1.0)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="cpp preprocessor">#define N 1000000</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="cpp preprocessor">#define LL long long</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="cpp color1 bold">int</code> <code class="cpp plain">main ()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">LL n, k;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">( cin &gt;&gt; n &gt;&gt; k ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">double</code> <code class="cpp plain">digit = 0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( k &gt; n - k ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( LL i = k + 1; i &lt;= n; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">digit += (</code><code class="cpp functions bold">log10</code> <code class="cpp plain">(i) - </code><code class="cpp functions bold">log10</code> <code class="cpp plain">(n - i + 1));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( LL i = n - k + 1; i &lt;= n; i++ )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">digit += (</code><code class="cpp functions bold">log10</code> <code class="cpp plain">(i) - </code><code class="cpp functions bold">log10</code> <code class="cpp plain">(n - i + 1));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">digit = </code><code class="cpp functions bold">floor</code> <code class="cpp plain">(digit) + 1;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code> <code class="cpp plain">(</code><code class="cpp string">"%0.lf\n"</code><code class="cpp plain">, digit);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="cpp plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="cpp comments">// @END_OF_SOURCE_CODE</code></td></tr></tbody></table></div></div></div><div class="clear"></div></div><div class="post-meta"><p><span class="categories">Filed under <a href="http://en.wordpress.com/tag/acm-uva-algorithm/" title="View all posts in ACM (UVa) Algorithm" rel="category tag">ACM (UVa) Algorithm</a></span></p></div></div><div class="navlink"><div class="nav-previous"><p><a href="http://tausiq.wordpress.com/category/acm-uva-algorithm/page/14/"><span class="meta-nav">â</span> Older posts</a></p></div><div class="nav-next"><p><a href="http://tausiq.wordpress.com/category/acm-uva-algorithm/page/12/">Newer posts <span class="meta-nav">â</span></a></p></div></div></div><div id="sidebar"><div id="categories-3" class="widget widget_categories"><h4>Categories</h4><select name="cat" id="cat" class="postform"><option value="-1">Select Category</option><option class="level-0" value="22469398">ACM (TJU)&nbsp;&nbsp;(121)</option><option class="level-0" value="16700319" selected="selected">ACM (UVa) Algorithm&nbsp;&nbsp;(361)</option><option class="level-0" value="61205">Bangla&nbsp;&nbsp;(7)</option><option class="level-0" value="297726">Code Jam&nbsp;&nbsp;(4)</option><option class="level-0" value="16232684">CodeChef&nbsp;&nbsp;(22)</option><option class="level-0" value="3325">Common&nbsp;&nbsp;(8)</option><option class="level-0" value="13746102">Easy Problems&nbsp;&nbsp;(70)</option><option class="level-0" value="401">Faith&nbsp;&nbsp;(1)</option><option class="level-0" value="6666323">HDU&nbsp;&nbsp;(40)</option><option class="level-0" value="24460693">IARCS&nbsp;&nbsp;(5)</option><option class="level-0" value="14496598">ICPC Live Archive&nbsp;&nbsp;(3)</option><option class="level-0" value="1017">Java&nbsp;&nbsp;(13)</option><option class="level-0" value="5065">PHP &amp; MySQL&nbsp;&nbsp;(1)</option><option class="level-0" value="16855379">Project Euler Algorithm&nbsp;&nbsp;(28)</option><option class="level-0" value="16855813">STL documentation&nbsp;&nbsp;(23)</option><option class="level-0" value="55330922">Timus Online Judge&nbsp;&nbsp;(29)</option><option class="level-0" value="2932">Tutorial&nbsp;&nbsp;(3)</option><option class="level-0" value="74936">USACO&nbsp;&nbsp;(21)</option></select> <script type="text/javascript">/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://tausiq.wordpress.com/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script></div><div id="pages-2" class="widget widget_pages"><h4>Pages</h4><ul><li class="page_item page-item-1064"><a href="http://tausiq.wordpress.com/easy-problems/" title="Easy&nbsp;Problems">Easy&nbsp;Problems</a></li> <li class="page_item page-item-1806"><a href="http://tausiq.wordpress.com/full-index/" title="Full&nbsp;Index">Full&nbsp;Index</a></li> <li class="page_item page-item-1774"><a href="http://tausiq.wordpress.com/index-uva/" title="Introducing&nbsp;(UVa)">Introducing&nbsp;(UVa)</a></li></ul></div><div id="archives-2" class="widget widget_archive"><h4>Archives</h4><select name="archive-dropdown" onchange="document.location.href=this.options[this.selectedIndex].value;"><option selected="selected" value="">Select Month</option><option value="http://tausiq.wordpress.com/2011/07/">July 2011 &nbsp;(9)</option><option value="http://tausiq.wordpress.com/2011/06/">June 2011 &nbsp;(17)</option><option value="http://tausiq.wordpress.com/2011/05/">May 2011 &nbsp;(14)</option><option value="http://tausiq.wordpress.com/2011/04/">April 2011 &nbsp;(25)</option><option value="http://tausiq.wordpress.com/2011/03/">March 2011 &nbsp;(19)</option><option value="http://tausiq.wordpress.com/2011/02/">February 2011 &nbsp;(9)</option><option value="http://tausiq.wordpress.com/2011/01/">January 2011 &nbsp;(17)</option><option value="http://tausiq.wordpress.com/2010/12/">December 2010 &nbsp;(14)</option><option value="http://tausiq.wordpress.com/2010/11/">November 2010 &nbsp;(25)</option><option value="http://tausiq.wordpress.com/2010/10/">October 2010 &nbsp;(16)</option><option value="http://tausiq.wordpress.com/2010/09/">September 2010 &nbsp;(24)</option><option value="http://tausiq.wordpress.com/2010/08/">August 2010 &nbsp;(22)</option><option value="http://tausiq.wordpress.com/2010/07/">July 2010 &nbsp;(27)</option><option value="http://tausiq.wordpress.com/2010/06/">June 2010 &nbsp;(34)</option><option value="http://tausiq.wordpress.com/2010/05/">May 2010 &nbsp;(29)</option><option value="http://tausiq.wordpress.com/2010/04/">April 2010 &nbsp;(20)</option><option value="http://tausiq.wordpress.com/2010/03/">March 2010 &nbsp;(1)</option><option value="http://tausiq.wordpress.com/2010/02/">February 2010 &nbsp;(15)</option><option value="http://tausiq.wordpress.com/2009/12/">December 2009 &nbsp;(15)</option><option value="http://tausiq.wordpress.com/2009/11/">November 2009 &nbsp;(48)</option><option value="http://tausiq.wordpress.com/2009/10/">October 2009 &nbsp;(119)</option><option value="http://tausiq.wordpress.com/2009/09/">September 2009 &nbsp;(34)</option><option value="http://tausiq.wordpress.com/2009/08/">August 2009 &nbsp;(33)</option><option value="http://tausiq.wordpress.com/2009/07/">July 2009 &nbsp;(46)</option><option value="http://tausiq.wordpress.com/2009/06/">June 2009 &nbsp;(19)</option><option value="http://tausiq.wordpress.com/2009/05/">May 2009 &nbsp;(7)</option><option value="http://tausiq.wordpress.com/2009/04/">April 2009 &nbsp;(7)</option><option value="http://tausiq.wordpress.com/2009/03/">March 2009 &nbsp;(13)</option><option value="http://tausiq.wordpress.com/2009/02/">February 2009 &nbsp;(21)</option><option value="http://tausiq.wordpress.com/2009/01/">January 2009 &nbsp;(26)</option><option value="http://tausiq.wordpress.com/2008/12/">December 2008 &nbsp;(23)</option></select></div><div id="top-posts" class="widget widget_stats_topposts"><h4>Today's Top Posts</h4><ul><li><a href="http://tausiq.wordpress.com/full-index/">Full Index</a></li><li><a href="http://tausiq.wordpress.com/easy-problems/">Easy Problems</a></li><li><a href="http://tausiq.wordpress.com/index-uva/">Introducing (UVa)</a></li><li><a href="http://tausiq.wordpress.com/2011/02/08/usaco-superprime-rib/">USACO: SuperPrime Rib</a></li><li><a href="http://tausiq.wordpress.com/2008/12/22/project-euler-44/">Project Euler: 44</a></li><li><a href="http://tausiq.wordpress.com/2009/01/24/acm-uva-113/">ACM (UVa): 113</a></li><li><a href="http://tausiq.wordpress.com/2009/01/13/project-euler-102/">Project Euler: 102</a></li><li><a href="http://tausiq.wordpress.com/2010/08/18/uva-10474-where-is-the-marble/">UVa : 10474 (Where is the Marble?)</a></li><li><a href="http://tausiq.wordpress.com/2011/04/17/timus-1005-stone-pile/">Timus: 1005 (Stone Pile)</a></li><li><a href="http://tausiq.wordpress.com/2009/11/11/acm-uva-11716/">ACM (UVa) : 11716</a></li></ul></div><div id="recent-posts-2" class="widget widget_recent_entries"><h4>Recent Posts</h4><ul><li><a href="http://tausiq.wordpress.com/2011/07/14/timus-1100-final-standings/" title="Timus : 1100 (Final&nbsp;Standings)">Timus : 1100 (Final&nbsp;Standings)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/14/timus-1327-fuses/" title="Timus : 1327&nbsp;(Fuses)">Timus : 1327&nbsp;(Fuses)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/14/timus-1023-buttons/" title="Timus : 1023&nbsp;(Buttons)">Timus : 1023&nbsp;(Buttons)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/09/timus-1243-divorce-of-the-seven-dwarfs/" title="Timus : 1243 (Divorce of the Seven&nbsp;Dwarfs)">Timus : 1243 (Divorce of the Seven&nbsp;Dwarfs)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/09/timus-1263-elections/" title="Timus : 1263&nbsp;(Elections)">Timus : 1263&nbsp;(Elections)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/09/timus-1110-power/" title="Timus : 1110&nbsp;(Power)">Timus : 1110&nbsp;(Power)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/09/timus-1048-superlong-sums/" title="Timus : 1048 (Superlong&nbsp;Sums)">Timus : 1048 (Superlong&nbsp;Sums)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/08/timus-1026-questions-and-answers/" title="Timus : 1026 (Questions and&nbsp;Answers)">Timus : 1026 (Questions and&nbsp;Answers)</a></li> <li><a href="http://tausiq.wordpress.com/2011/07/08/timus-1021-sacrament-of-the-sum/" title="Timus : 1021 (Sacrament of the&nbsp;Sum)">Timus : 1021 (Sacrament of the&nbsp;Sum)</a></li> <li><a href="http://tausiq.wordpress.com/2011/06/17/uva-10298-power-strings/" title="UVa : 10298 (Power&nbsp;Strings)">UVa : 10298 (Power&nbsp;Strings)</a></li></ul></div><div id="text-404798141" class="widget widget_text"><h4>Visitors</h4><div class="textwidget"><a href="http://whos.amung.us/stats/potpuiasm104/"><img src="13_files/potpuiasm104.png" title="Click to see how many people are online" width="81" border="0" height="29"></a></div></div><div id="blog-stats" class="widget widget_statscounter"><h4>Blog Visited</h4><ul><li>120,268 times</li></ul></div><div id="blog_subscription-3" class="widget widget_blog_subscription"><h4><label for="subscribe-field">Email Subscription</label></h4><form action="http://subscribe.wordpress.com" method="post" accept-charset="utf-8" id="subscribe-blog"><p>Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p><p><input name="email" style="padding: 1px 2px; width: 95%;" id="subscribe-field" type="text"></p><input name="action" value="subscribe" type="hidden"> <input name="blog_id" value="5789743" type="hidden"> <input name="source" value="http://tausiq.wordpress.com/category/acm-uva-algorithm/page/13/" type="hidden"> <input name="sub-type" value="widget" type="hidden"> <input id="_wpnonce" name="_wpnonce" value="0929196b34" type="hidden"><input name="_wp_http_referer" value="/category/acm-uva-algorithm/page/13/" type="hidden"><p><input value="Sign me up!" type="submit"></p></form></div><div id="meta-2" class="widget widget_meta"><h4>Log in / Links</h4><ul><li><a href="http://tausiq.wordpress.com/wp-login.php?action=register">Register</a></li> <li><a href="http://tausiq.wordpress.com/wp-login.php">Log in</a></li> <li><a href="http://tausiq.wordpress.com/feed/" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li> <li><a href="http://tausiq.wordpress.com/comments/feed/" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li> <li><a href="http://wordpress.com/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.com</a></li></ul></div><div id="rss-4" class="widget widget_rss"><h4><a class="rsswidget" href="http://nasir8891.wordpress.com/feed/" title="Syndicate this content"><img style="border: medium none ; background: orange none repeat scroll 0% 0%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; color: white;" src="13_files/rss.png" alt="RSS" width="14" height="14"></a> <a class="rsswidget" href="http://nasir8891.wordpress.com/" title="">Ubuntu, Open Source &amp; â¦</a></h4><ul><li><a class="rsswidget" href="http://nasir8891.wordpress.com/2011/04/23/prayer/" title="Prayer, originally uploaded by nasir khan saikat. Filed under: bangladesh, Photos Tagged: ahsan monjil, à¦à¦¹à¦¸à¦¾à¦¨ à¦®à¦à§à¦à¦¿à¦², Photos, prayer">Prayer</a></li><li><a class="rsswidget" href="http://nasir8891.wordpress.com/2010/11/26/create-own-super-compute/" title="à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°à§à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§ à¦¸à¦¾à¦§à¦¾à¦°à¦£ à¦à¦¾à¦à¦à§à¦²à§ à¦¦à§à¦°à§à¦¤à¦à¦¤à¦¿à¦¤à§ à¦à¦°à¦¾ à¦¯à¦¾à§à¥¤ à¦à¦®à¦¨à¦¿à¦¤à§ à¦¯à§ à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°à¦à§à¦²à§ à¦à¦®à¦°à¦¾ à¦¬à§à¦¯à¦¬à¦¹à¦¾à¦° à¦à¦°à§ à¦¥à¦¾à¦à¦¿, à¦à¦° à¦¬à¦¾à¦à¦°à§ à¦à¦°à¦ à¦¨à¦¾à¦¨à¦¾ à¦§à¦°à¦¨à§à¦° à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦° à¦°à§à§à¦à§à¥¤ à¦¸à§à¦ªà¦¾à¦° à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦° à¦¹à¦²à§ à¦à¦®à¦¨ à¦¬à¦¿à¦¶à§à¦· à¦§à¦°à¦¨à§à¦° à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°, à¦¯à¦¾à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§ à¦¬à§ à¦§à¦°à¦¨à§à¦° à¦à¦¾à¦à¦à§à¦²à§ à¦¦à§à¦°à§à¦¤à¦à¦¤à¦¿à¦¤à§ à¦à¦°à¦¾ à¦¯à¦¾à§à¥¤ à¦ à¦§à¦°à¦¨à§à¦° à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°à¦à§à¦²à§ à¦à¦à¦¾à¦°à§à¦ à¦¬à§à¦¶ à¦¬à§ à¦à¦¬à¦ à¦à¦¨à§à¦¯à¦¾à¦¨à§à¦¯ à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°à§à¦° à¦®à¦¤à§ à¦à¦à¦¿ à¦¸à¦¾à¦§à¦¾à¦°à¦£ à¦¬à¦¾à¦à¦¾à¦°à§ à¦¬à¦¿à¦à§à¦°à¦¿ à¦à¦°à¦¾ à¦¹à§ à¦¨à¦¾, à¦«à¦²à§ à¦à¦à§à¦à¦¾ [...] [â¦]">à¦¤à§à¦°à¦¿ à¦à¦°à§à¦¨ à¦¨à¦¿à¦à§à¦° à¦¸à§à¦ªà¦¾à¦° à¦à¦®à§à¦ªà¦¿à¦à¦à¦¾à¦°</a></li><li><a class="rsswidget" href="http://nasir8891.wordpress.com/2010/09/21/netherland-national-archive-joins-wikipedia/" title="à¦¸à¦®à§à¦ªà§à¦°à¦¤à¦¿ à¦¨à§à¦¦à¦¾à¦°à¦²à§à¦¯à¦¾à¦¨à§à¦¡à§à¦° à¦à¦¾à¦¤à§à§ à¦à¦°à§à¦à¦¾à¦à¦­ à¦¤à¦¾à¦¦à§à¦° à¦à¦¾à¦à§ à¦¸à¦à¦°à¦à§à¦·à¦¿à¦¤ à¦à¦ à¦¹à¦¾à¦à¦¾à¦°à§à¦°à¦ à¦¬à§à¦¶à¦¿ à¦à¦¬à¦¿ à¦à¦à¦à¦¿à¦ªà¦¿à¦¡à¦¿à§à¦¾à§ à¦¸à¦°à§à¦¬à¦¸à¦¾à¦§à¦¾à¦°à¦£à§à¦° à¦à¦¨à§à¦¯ à¦ªà§à¦°à¦à¦¾à¦¶ à¦à¦°à§à¦à§à¥¤ à¦à¦ à¦à¦¬à¦¿à¦à§à¦²à§ à¦ªà§à¦°à¦§à¦¾à¦¨à¦¤ à¦¦à§à¦¶à¦à¦¿à¦° à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦°à¦¾à¦à¦¨à§à¦¤à¦¿à¦ à¦¬à§à¦¯à¦à§à¦¤à¦¿à¦¤à§à¦¬ à¦à¦¬à¦ à¦¸à¦¾à¦®à§à¦ªà§à¦°à¦¤à¦¿à¦ à¦¸à¦®à§à§ à¦à¦à§ à¦¯à¦¾à¦à§à¦¾ à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦°à¦¾à¦à¦¨à§à¦¤à¦¿à¦ à¦à¦à¦¨à¦¾à¦°à¥¤ à¦¬à¦¿à¦¶à§à¦·à¦­à¦¾à¦¬à§ à¦ à¦§à¦°à¦¨à§à¦° à¦à¦¬à¦¿ à¦ªà§à¦°à¦à¦¾à¦¶ à¦à¦°à¦¾à¦° à¦à¦¾à¦°à¦£ à¦¹à¦²à§, à¦¸à¦°à¦à¦¾à¦°à¦¿ à¦à¦¨à§à¦ à¦à¦¨à§à¦·à§à¦ à¦¾à¦¨à§à¦ à¦¸à¦°à§à¦¬à¦¸à¦¾à¦§à¦¾à¦°à¦£à§à¦° à¦à¦¨à§à¦¯ à¦à¦¬à¦¿ à¦¤à§à¦²à¦¾ à¦¬à¦¾ à¦ªà§à¦°à¦à¦¾à¦¶à§à¦° à¦¸à§à¦¯à§à¦ à¦¦à§à¦à§à¦¾ à¦¹à§ à¦¨à¦¾à¥¤ à¦à¦ à¦ª [â¦]">à¦à¦à¦à¦¿à¦ªà¦¿à¦¡à¦¿à§à¦¾à§ à¦¨à§à¦¦à¦¾à¦°à¦²à§à¦¯à¦¾à¦¨à§à¦¡à§à¦° à¦à¦¾à¦¤à§à§ à¦à¦°à§à¦à¦¾à¦à¦­ à¦¤à¦¥à§à¦¯</a></li></ul></div><div id="text-303005501" class="widget widget_text"><h4>Contact</h4><div class="textwidget"><p>à¦®à§ : à¦¶à¦¾à¦¹à¦¾à¦¬ à¦à¦¦à§à¦¦à§à¦¨ (Md. Shahab Uddin)<br>Dept: CSE of UIU<br>Bangladesh.<br>Email ID: tausiq19@gmail.com</p></div></div><div id="text-404798147" class="widget widget_text"><h4>FakeBook</h4><div class="textwidget"><!--//--><a href="http://en-gb.facebook.com/people/Shahab-Uddin/1552741598" title="Shahab Uddin" target="_TOP" style="font-family: &quot;font-size:11px;font-variant:normal;font-style:normal;font-weight:normal;color:#3B5998;text-decoration:none;&quot;;">Shahab Uddin</a><br><a href="http://en-gb.facebook.com/people/Shahab-Uddin/1552741598" title="Shahab Uddin" target="_TOP"><img src="13_files/1552741598.png" style="border: 0pt none ;" width="120" height="213"></a><br><a href="http://en-gb.facebook.com/facebook-widgets/" title="Make your own badge!" target="_TOP" style="font-family: &quot;font-size:11px;font-variant:normal;font-style:normal;font-weight:normal;color:#3B5998;text-decoration:none;&quot;;">Create your badge</a></div></div><div id="text-404798145" class="widget widget_text"><h4>PeaceMaker</h4><div class="textwidget"><a href="http://enneagraminstitute.com/"><img src="13_files/type9M.gif" alt="Enneagram"></a>free enneagram test</div></div><div id="boxnet" class="widget widget_box"><embed src="13_files/widget_player.swf" type="application/x-shockwave-flash" flashvars="subString=folderId=klsf5g6k34,color=000000,title=My shared files" wmode="transparent" width="289" height="150"><a href="http://tausiq.wordpress.com/category/acm-uva-algorithm/page/13/%5C%22http://www.box.net/static/flash/widget_player.swf%5C%22">http://www.box.net/static/flash/widget_player.swf</a><a href="http://tausiq.wordpress.com/category/acm-uva-algorithm/page/13/%5C%22http://www.box.net/static/flash/widget_player.swf%5C%22">http://www.box.net/static/flash/widget_player.swf</a></div><div id="text-404798142" class="widget widget_text"><h4>Live</h4><div class="textwidget"><a href="http://feedjit.com/ir1/5b1ef8941572ccbc/"><img src="13_files/5b1ef8941572ccbc.png" alt=""></a></div></div><div id="text-404798143" class="widget widget_text"><h4>Country</h4><div class="textwidget"><a target="_blank" href="http://24counter.com/conline/1250429108/"><img alt="visitors by country counter" src="13_files/fcc.png" border="0"></a><br><a target="_blank" href="http://24counter.com/">flag counter</a></div></div><div id="text-404798146" class="widget widget_text"><h4>Location</h4><div class="textwidget"><a href="http://www3.clustrmaps.com/counter/maps.php?url=http://tausiq.wordpress.com" id="clustrMapsLink"><img src="13_files/index2.jpeg" style="border: 0pt none ;" alt="Locations of visitors to this page" title="Locations of visitors to this page"> </a></div></div><div id="flickr" class="widget widget_flickr"><h4>Photos</h4><table id="flickr_badge_uber_wrapper" class="flickr-size-thumbnail" border="0" cellpadding="0" cellspacing="10"><tbody><tr><td><table id="flickr_badge_wrapper" border="0" cellpadding="0" cellspacing="10"><tbody><tr><td align="center"><a href="http://www.flickr.com/photos/48614619@N04/4454871082/"><img alt="van-renselar-abstract-art-abstract-art" title="van-renselar-abstract-art-abstract-art" src="13_files/4454871082_e38175a7a7_t.jpg" border="0"></a><br><br><a href="http://www.flickr.com/photos/48614619@N04/4454869756/"><img alt="abstract-screen-saver-1079" title="abstract-screen-saver-1079" src="13_files/4454869756_2a58daa41d_t.jpg" border="0"></a><br><br><a href="http://www.flickr.com/photos/48614619@N04/4454083797/"><img alt="abstract_219" title="abstract_219" src="13_files/4454083797_d9329fd401_t.jpg" border="0"></a><br><br><a href="http://www.flickr.com/photos/48614619@N04/4454855528/"><img alt="abstract" title="abstract" src="13_files/4454855528_3e3bd8e4c2_t.jpg" border="0"></a><br><br><a href="http://www.flickr.com/photos/48614619@N04/">More Photos</a></td></tr></tbody></table></td></tr></tbody></table></div></div></div><div id="footer"><div class="footerleft"><p><a href="http://wordpress.com/?ref=footer" rel="generator">Blog at WordPress.com</a>.</p></div><div class="footerright">Theme: <a href="http://theme.wordpress.com/themes/enterprise/">Enterprise</a> by <a href="http://www.studiopress.com/" rel="designer">StudioPress</a>. <a href="http://en.support.wordpress.com/custom-design/#custom-fonts" rel="external" title="Learn more about the fonts on this blog and the Custom Design upgrade">Fonts on this blog</a>.</div></div></div><script type="text/javascript">// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script type="text/javascript">_qoptions={qacct:'p-18-mFEk4J448M',labels:'language.en,type.wpcom'};</script> <script type="text/javascript" style="display: none;">if(!__qc){var __qc={qcdst:function(){if(__qc.qctzoff(0)!=__qc.qctzoff(6))return 1;return 0;},qctzoff:function(m){var d1=new Date(2000,m,1,0,0,0,0);var t=d1.toGMTString();var d3=new Date(t.substring(0,t.lastIndexOf(" ")-1));return d1-d3;},qceuc:function(s){if(typeof(encodeURIComponent)=='function'){return encodeURIComponent(s);}
else{return escape(s);}},qcrnd:function(){return Math.round(Math.random()*2147483647);},qcgc:function(n){var v='';var c=document.cookie;if(!c)return v;var i=c.indexOf(n+"=");var len=i+n.length+1;if(i>-1){var end=c.indexOf(";",len);if(end<0)end=c.length;v=c.substring(len,end);}
return v;},qcdomain:function(){var d=document.domain;if(d.substring(0,4)=="www.")d=d.substring(4,d.length);var a=d.split(".");var len=a.length;if(len<3)return d;var e=a[len-1];if(e.length<3)return d;d=a[len-2]+"."+a[len-1];return d;},qhash2:function(h,s){for(var i=0;i<s.length;i++){h^=s.charCodeAt(i);h+=(h<<1)+(h<<4)+(h<<7)+(h<<8)+(h<<24);}
return h;},qhash:function(s){var h1=0x811c9dc5,h2=0xc9dc5118;var hash1=__qc.qhash2(h1,s);var hash2=__qc.qhash2(h2,s);return(Math.round(Math.abs(hash1*hash2)/65536)).toString(16);},sd:["4dcfa7079941","127fdf7967f31","588ab9292a3f","32f92b0727e5","22f9aa38dfd3","a4abfe8f3e04","18b66bc1325c","958e70ea2f28","bdbf0cb4bbb","65118a0d557","40a1d9db1864","18ae3d985046","3b26460f55d"],qcsc:function(){var s="";var d=__qc.qcdomain();if(__qc.qad==1)return";fpan=u;fpa=";var qh=__qc.qhash(d);for(var i=0;i<__qc.sd.length;i++){if(__qc.sd[i]==qh)return";fpan=u;fpa=";}
var u=document;var a=__qc.qcgc("__qca");if(a.length>0){s+=";fpan=0;fpa="+a;}
else{var da=new Date();a='P0-'+__qc.qcrnd()+'-'+da.getTime();u.cookie="__qca="+a+"; expires=Sun, 18 Jan 2038 00:00:00 GMT; path=/; domain="+d;a=__qc.qcgc("__qca");if(a.length>0){s+=";fpan=1;fpa="+a;}
else{s+=";fpan=u;fpa=";}}
return s;},qcdc:function(n){document.cookie=n+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/; domain="+__qc.qcdomain();},qpxload:function(img){if(img&&typeof(img.width)=="number"&&img.width==3){__qc.qcdc("__qca");}},qcp:function(p,myqo){var s='',a=null;var media='webpage',event='load';if(myqo!=null){for(var k in myqo){if(typeof(k)!='string'){continue;}
if(typeof(myqo[k])!='string'){continue;}
if(k=='qacct'){a=myqo[k];continue;}
s+=';'+k+p+'='+__qc.qceuc(myqo[k]);if(k=='media'){media=myqo[k];}
if(k=='event'){event=myqo[k];}}}
if(typeof a!="string"){if((typeof _qacct=="undefined")||(_qacct.length==0))return'';a=_qacct;}
if(media=='webpage'&&event=='load'){for(var i=0;i<__qc.qpixelsent.length;i++){if(__qc.qpixelsent[i]==a)return'';}
__qc.qpixelsent.push(a);}
if(media=='ad'){__qc.qad=1;}
s=';a'+p+'='+a+s;return s;},qcesc:function(s){return s.replace(/\./g,'%2E').replace(/,/g,'%2C');},qcd:function(o){return(typeof(o)!="undefined"&&o!=null);},qcogl:function(){var m=document.getElementsByTagName('meta');var o='';for(var i=0;i<m.length;i++){if(o.length>=1000)return o;if(__qc.qcd(m[i])&&__qc.qcd(m[i].attributes)&&__qc.qcd(m[i].attributes.property)&&__qc.qcd(m[i].attributes.property.value)&&__qc.qcd(m[i].content)){var p=m[i].attributes.property.value;var c=m[i].content;if(p.length>3&&p.substring(0,3)=='og:'){if(o.length>0)o+=',';var l=(c.length>80)?80:c.length;o+=__qc.qcesc(p.substring(3,p.length))+'.'+__qc.qcesc(c.substring(0,l));}}}
return __qc.qceuc(o);},firepixel:function(qoptions){var e=(typeof(encodeURIComponent)=='function')?"n":"s";var r=__qc.qcrnd();var sr='',qo='',qm='',url='',ref='',je='u',ns='1';var qocount=0;__qc.qad=0;if(typeof __qc.qpixelsent=="undefined"){__qc.qpixelsent=new Array();}
if(typeof qoptions!="undefined"&&qoptions!=null){__qc.qopts=qoptions;for(var k in __qc.qopts){if(typeof(__qc.qopts[k])=='string'){qo=__qc.qcp("",__qc.qopts);break;}else if(typeof(__qc.qopts[k])=='object'&&__qc.qopts[k]!=null){++qocount;qo+=__qc.qcp("."+qocount,__qc.qopts[k]);}}}else if(typeof _qacct=="string"){qo=__qc.qcp("",null);}
if(qo.length==0)return;var ce=(navigator.cookieEnabled)?"1":"0";if(typeof navigator.javaEnabled!='undefined')je=(navigator.javaEnabled())?"1":"0";if(typeof _qmeta!="undefined"&&_qmeta!=null){qm=';m='+__qc.qceuc(_qmeta);_qmeta=null;}
if(self.screen){sr=screen.width+"x"+screen.height+"x"+screen.colorDepth;}
var d=new Date();var dst=__qc.qcdst();var qs='http';if(window.location.protocol=='https:'){qs+='s';}
qs+="://pixel.quantserve.com";var fp=__qc.qcsc();if(window.location&&window.location.href)url=__qc.qceuc(window.location.href);if(window.document&&window.document.referrer)ref=__qc.qceuc(window.document.referrer);if(self==top)ns='0';var ogl=__qc.qcogl();var img=new Image();img.alt="";img.src=qs+'/pixel'+';r='+r+fp+';ns='+ns+';url='+url+';ref='+ref+';ce='+ce+';je='+je+';sr='+sr+';enc='+e+';ogl='+ogl+';dst='+dst+';et='+d.getTime()+';tzo='+d.getTimezoneOffset()+qo+qm;img.onload=function(){__qc.qpxload(img);}},quantserve:function(){if(typeof _qevents=='undefined'){_qevents=[];}
if(typeof _qoptions!="undefined"&&_qoptions!=null){__qc.firepixel(_qoptions);_qoptions=null;}else if(!_qevents.length&&typeof _qacct!="undefined"){__qc.firepixel(null);}
if(!__qc.evts){for(var k in _qevents){__qc.firepixel(_qevents[k]);}
_qevents={push:function(){var a=arguments;for(var i=0;i<a.length;i++){__qc.firepixel(a[i]);}}};__qc.evts=1;}}};}
function quantserve(){__qc.quantserve();}
quantserve();</script> <noscript><p><img
class="robots-nocontent"
src="http://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=language.en%2Ctype.wpcom"
style="display:none" height="1" width="1" alt="" /></p></noscript><script type="text/javascript" style="display: none;">if('undefined'==typeof(console)){console={"log":function(str){},"debug":function(str){}}}var Gravatar={"profile_stack":{},"profile_map":{},"overTimeout":false,"outTimeout":false,"stopOver":false,"active_grav":false,"active_hash":false,"active_id":false,"active_grav_clone":false,"profile_cb":null,"stats_queue":[],"throbber":null,"has_bg":false,"disabled":false,"url_prefix":'http://www',"disable":function(){Gravatar.disabled=true;Gravatar.hide_card();var d=new Date(2100,1,1,1,1,1);Gravatar.stat('disable');if(-1==window.location.host.search(/wordpress.com/i)){document.cookie='nohovercard=1; expires='+d.toUTCString()+';'}else{document.cookie='nohovercard=1; expires='+d.toUTCString()+'; domain=.wordpress.com; path=/'}},"mouseOut":function(e){e.stopImmediatePropagation();Gravatar.stopOver=true;Gravatar.outTimeout=setTimeout(function(){Gravatar.hide_card()},300)},"init":function(container,noGrav){var ca=document.cookie.split(';'),i,c;for(i=0;i<ca.length;i++){c=ca[i];while(' '==c.charAt(0)){c=c.substring(1,c.length)}if(0==c.indexOf('nohovercard=1')){return}}if('https:'==window.location.protocol)this.url_prefix='https://secure';this.attach_profiles(container,noGrav);this.add_card_css();jQuery('img.grav-hashed').live('mouseenter.gravatar mouseleave.gravatar',function(e){if(Gravatar.disabled){return}e.preventDefault();e.stopPropagation();if('mouseleave'==e.type||'mouseout'==e.type){return Gravatar.mouseOut.call(this,e)}Gravatar.stopOver=false;Gravatar.active_id=jQuery(this).attr('id');Gravatar.active_hash=Gravatar.active_id.split('-')[1];Gravatar.untilt_gravatar();clearTimeout(Gravatar.overTimeout);if(false===Gravatar.profile_map['g'+Gravatar.active_hash]){return}Gravatar.stat('hover');clearTimeout(Gravatar.outTimeout);Gravatar.tilt_gravatar();Gravatar.fetch_profile_by_hash(Gravatar.active_hash,Gravatar.active_id);Gravatar.overTimeout=setTimeout(function(){Gravatar.show_card()},600)});jQuery('div.gcard, img.grav-clone').live('mouseenter.gravatar mouseleave.gravatar',function(e){if(Gravatar.disabled){return}e.preventDefault();e.stopPropagation();if(e.type=='mouseenter'||e.type=='mouseover'){Gravatar.stopOver=false;clearTimeout(Gravatar.outTimeout)}else{Gravatar.mouseOut.call(this,e)}});jQuery(window).bind('scroll',function(){if(!Gravatar.active_hash.length){return}Gravatar.hide_card()})},"attach_profiles":function(container,noGrav){setInterval(Gravatar.send_stats,3000);container="undefined"==typeof(container)?"body":container;if(noGrav&&'string'==typeof(noGrav)){jQuery(noGrav).addClass('no-grav')}jQuery(container+' img[src*="gravatar.com/avatar"]').not('.no-grav, .no-grav img').each(function(){hash=Gravatar.extract_hash(this);uniq=0;if(jQuery('#grav-'+hash+'-'+uniq).length){while(jQuery('#grav-'+hash+'-'+uniq).length){uniq++}}var g=jQuery(this).attr('id','grav-'+hash+'-'+uniq).attr('title','').removeAttr('title');if(g.parent('a').size()){g.parent('a').attr('title','').removeAttr('title')}g.addClass('grav-hashed');if(g.parents('#comments, .comments, #commentlist, .commentlist, .grav-hijack').size()||!g.parents('a:first').size()){g.addClass('grav-hijack')}})},"show_card":function(){if(Gravatar.stopOver){return}dom_id=this.profile_map['g'+Gravatar.active_hash];jQuery('.gcard').hide();if('fetching'==this.profile_stack['g'+Gravatar.active_hash]){Gravatar.show_throbber();this.listen(Gravatar.active_hash,'show_card');Gravatar.stat('wait');return}if('undefined'==typeof(this.profile_stack['g'+Gravatar.active_hash])){Gravatar.show_throbber();this.listen(Gravatar.active_hash,'show_card');this.fetch_profile_by_hash(Gravatar.active_hash,dom_id);return}Gravatar.stat('show');Gravatar.hide_throbber();if(!jQuery('#profile-'+this.active_hash).length){this.build_card(this.active_hash,this.profile_stack['g'+this.active_hash])}this.render_card(this.active_grav,'profile-'+this.active_hash)},"hide_card":function(){clearTimeout(Gravatar.overTimeout);this.untilt_gravatar();grav_resize.current_image=false;jQuery('div.gcard').filter('#profile-'+this.active_hash).fadeOut(120,function(){jQuery('img.grav-large').stop().remove()}).end().not('#profile-'+this.active_hash).hide()},"render_card":function(grav,card_id){var card_el=jQuery('#'+card_id).stop();var grav_el=grav;var grav_pos=grav_el.offset();if(null!=grav_pos){var grav_width=grav_el.width();var grav_height=grav_el.height();var grav_space=5+(grav_width*.4);var card_width=card_el.width();var card_height=card_el.height();if(card_width==jQuery(window).width()){card_width=400;card_height=200}var left=grav_pos.left+grav_width+grav_space;var top=grav_pos.top;var grav_pos_class='pos-right';if(grav_pos.left+grav_width+grav_space+card_width>jQuery(window).width()+jQuery(window).scrollLeft()){left=grav_pos.left-(card_width+grav_space);grav_pos_class='pos-left'}var top_offset=grav_height*.25;jQuery('#'+card_id).removeClass('pos-right pos-left').addClass(grav_pos_class).css({'top':(top-top_offset)+'px','left':left+'px'});var arrow_offset=(grav_height/2);if(arrow_offset>card_height){arrow_offset=card_height/2}if(arrow_offset>(card_height/2)-6){arrow_offset=(card_height/2)-6}if(arrow_offset>53){arrow_offset=53}if(this.has_bg){arrow_offset=arrow_offset-8}if(arrow_offset<0){arrow_offset=0}var css={'height':((grav_height*1.5)+top_offset)+'px'};if('pos-right'==grav_pos_class){css['right']='auto';css['left']='-7px';css['background-position']='0px '+arrow_offset+'px'}else{css['right']='-10px';css['left']='auto';css['background-position']='0px '+arrow_offset+'px'}jQuery('#'+card_id+' .grav-cardarrow').css(css)}card_el.stop().css({opacity:0}).show().animate({opacity:1},150,'linear',function(){jQuery(this).css({opacity:'auto'});jQuery(this).stop();grav_resize.init(card_id);grav_gallery.init(card_id);var date=new Date();var qp='http';if('https:'==window.location.protocol){qp+='s'}var url=qp+'://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=type.gravatar.hovercard&rand='+Math.random().toString()+'-'+date.getTime();var img=new Image(1,1);img.src=url})},"build_card":function(hash,profile){Object.size=function(obj){var size=0,key;for(key in obj){if(obj.hasOwnProperty(key)){size++}}return size};GProfile.init(profile);var urls=GProfile.get('urls');var photos=GProfile.get('photos');var services=GProfile.get('accounts');var limit=100;if(Object.size(urls)>3){limit+=90}else{limit+=10+(20*Object.size(urls))}if(Object.size(services)>0){limit+=30}var description=GProfile.get('aboutMe');description=description.replace(/<[^>]+>/ig,'');description=description.toString().substr(0,limit);if(limit==description.length){description+='<a href="'+GProfile.get('profileUrl')+'" target="_blank">&#8230;</a>'}var card_class='grav-inner';if(Gravatar.my_hash&&hash==Gravatar.my_hash){card_class+=' grav-is-user';if(!description.length){description="<p>Want a better profile? <a class='grav-edit-profile' href='http://gravatar.com/profiles/edit/?noclose' target='_blank'>Click here</a>.</p>"}}if(description.length){card_class+=' gcard-about'}name=GProfile.get('displayName');if(!name.length){name=GProfile.get('preferredUsername')}var card='<div id="profile-'+hash+'" class="gcard grofile"> 					<div class="grav-inner"> 						<div class="grav-leftcol"> 							<h4><a href="'+GProfile.get('profileUrl')+'" target="_blank">'+name+'</a></h4> 							<p class="grav-about"> 								'+description+' 							</p> 						</div> 						<div class="grav-rightcol">';if(Object.size(urls)||Object.size(services)){card_class+=' gcard-links'}card+='<h5 class="grav-links">Personal Links</h5> 					<ul class="grav-links">';url_count=0;for(var u in urls){if(!urls[u]['value']||!urls[u]['title']){continue}if(url_count>2){card+='<li class="grav-small"><a href="'+GProfile.get('profileUrl')+'" target="_blank"> + '+(urls.length-url_count)+' more</a></li>';break}card+='<li><a href="'+urls[u]['value']+'" data-hmac="'+urls[u]['hmac']+'" target="_blank">'+urls[u]['title']+'</a></li>';url_count++}card+='</ul>';if(Object.size(services)){card_class+=' gcard-services'}card+='<ul class="grav-services">';var services_out=0;for(var s in services){if(!services[s]['url']){continue}if(services_out>=6){break}card+='<li class="gcard-share-link"><a href="'+services[s].url+'" class="accounts_'+services[s].shortname+'" title="'+services[s].display+'" data-hmac="'+services[s]['hmac']+'" target="_blank"></a></li>';services_out++}card+='</ul>';card+='</div>';if(Object.size(photos)>1){card_class+=' gcard-gallery'}card+='<div class="grav-gallery"> 					<a href="" class="grav-gallery-prev">Previous</a> 					<div class="grav-gallery-container"> 						<ul>';for(var p in photos){if(!photos[p]['value']){continue}card+='<li><a href="'+photos[p]['value']+'?size=600&axis=y"><img src="'+photos[p]['value']+'?size=50&axis=y" alt="Grav" /></a></li>'}card+='</ul> 				</div> 				<a href="" class="grav-gallery-next">Next</a> 			</div>';card+='<div class="grav-cardarrow"></div> 					<div class="grav-tag"><a href="http://gravatar.com/" title="Powered by Gravatar.com" target="_blank">&nbsp;</a></div> 					<div style="clear:both"></div>';card+='<p class="grav-disable"><a href="#" onclick="Gravatar.disable(); return false">Turn off hovercards</a></p>';card+='</div></div>';jQuery('body').append(jQuery(card));jQuery('#profile-'+hash+' .grav-inner').addClass(card_class);this.has_bg=false;var bg=GProfile.get('profileBackground');if(Object.size(bg)){this.has_bg=true;var bg_css={padding:'8px 0'};if(bg.color){bg_css['background-color']=bg.color}if(bg.url){bg_css['background-image']='url('+bg.url+')'}if(bg.position){bg_css['background-position']=bg.position}if(bg.repeat){bg_css['background-repeat']=bg.repeat}jQuery('#profile-'+hash).css(bg_css)}if(!jQuery('#profile-'+hash+' .gcard-links').length&&!jQuery('#profile-'+hash+' .gcard-services').length){jQuery('#profile-'+hash+' .grav-rightcol').css({'width':'auto'})}if(!jQuery('#profile-'+hash+' .gcard-about').length){jQuery('#profile-'+hash+' .grav-leftcol').css({'width':'auto'})}if(jQuery.isFunction(Gravatar.profile_cb)){Gravatar.loaded_js(hash,'profile-'+hash)}jQuery('#profile-'+hash+' .grav-gallery img').click(function(){Gravatar.stat('click_photo')});jQuery('#profile-'+hash+' a.grav-extra-comments').click(function(e){return Gravatar.stat('click_comment',e)});jQuery('#profile-'+hash+' a.grav-extra-likes').click(function(e){return Gravatar.stat('click_like',e)});jQuery('#profile-'+hash+' .grav-links a').click(function(e){return Gravatar.stat('click_link',e)});jQuery('#profile-'+hash+' .grav-services a').click(function(e){return Gravatar.stat('click_service',e)});jQuery('#profile-'+hash+' h4 a').click(function(e){return Gravatar.stat('to_profile',e)});jQuery('#profile-'+hash+' .grav-tag a').click(function(e){if(3==e.which||2==e.button||e.altKey||e.metaKey||e.ctrlKey){e.preventDefault();e.stopImmediatePropagation();Gravatar.stat('egg');return Gravatar.whee()}return Gravatar.stat('to_gravatar',e)}).bind('contextmenu',function(e){e.preventDefault();e.stopImmediatePropagation();Gravatar.stat('egg');return Gravatar.whee()});jQuery('#profile-'+hash+' a.grav-edit-profile').click(function(e){return Gravatar.stat('click_edit_profile',e)})},"tilt_gravatar":function(){this.active_grav=jQuery('img#'+this.active_id);if(jQuery('img#grav-clone-'+this.active_hash).length){return}this.active_grav_clone=this.active_grav.clone().attr('id','grav-clone-'+this.active_hash).addClass('grav-clone');var top=this.active_grav.offset().top+parseInt(this.active_grav.css('padding-top'),10),left=this.active_grav.offset().left+parseInt(this.active_grav.css('padding-left'),10);var fancyCSS={'-webkit-box-shadow':'0 0 4px #aaa','-moz-box-shadow':'0 0 4px #aaa','box-shadow':'0 0 4px #aaa','border-width':'2px 2px '+(this.active_grav.height()/5)+'px 2px','border-color':'#fff','border-style':'solid','padding':'0px'};if(jQuery.browser.msie&&9>jQuery.browser.version){fancyCSS['filter']="progid:DXImageTransform.Microsoft.Glow(Color='#aaaaaa', strength='2'";top-=2;left-=2}if(-1==navigator.appVersion.indexOf('Win')){fancyCSS['-webkit-transform']='rotate(-4deg) scale(1.3)';fancyCSS['-moz-transform']='rotate(-4deg) scale(1.3)';fancyCSS['-o-transform']='rotate(-4deg) scale(1.3)';fancyCSS['transform']='rotate(-4deg) scale(1.3)';if(jQuery.browser.msie&&9>jQuery.browser.version){fancyCSS['filter']="progid:DXImageTransform.Microsoft.Matrix(M11='1.29683327', M12='0.0906834159', M21='-0.0906834159', M22='1.29683327', SizingMethod='auto expand') "+fancyCSS['filter'];top-=3;left-=4}}else{top-=1;left-=1}if(this.active_grav.hasClass('grav-hijack')){var aWrap='<a href="http://gravatar.com/'+this.active_hash+'" class="grav-clone-a" target="_blank"></a>'}else{var aWrap=this.active_grav.parents('a:first').clone(true).empty()}var appendix=this.active_grav_clone.css(fancyCSS).wrap(aWrap).parent().css({'position':'absolute','top':top+'px','left':left+'px','z-index':15,'border':'none','text-decoration':'none'});jQuery('body').append(appendix);this.active_grav_clone.removeClass('grav-hashed')},"untilt_gravatar":function(){jQuery('img.grav-clone, a.grav-clone-a').remove();Gravatar.hide_throbber()},"show_throbber":function(){if(!Gravatar.throbber){Gravatar.throbber=jQuery('<div id="grav-throbber" style="position: absolute; z-index: 16"><img src="'+this.url_prefix+'.gravatar.com/images/throbber.gif" alt="." width="15" height="15" /></div>')}jQuery('body').append(Gravatar.throbber);var offset=jQuery('#'+Gravatar.active_id).offset();Gravatar.throbber.css({top:offset.top+2+'px',left:offset.left+1+'px'})},"hide_throbber":function(){if(!Gravatar.throbber){return}Gravatar.throbber.remove()},"fetch_profile_by_email":function(email){return this.fetch_profile_by_hash(this.md5(email))},"fetch_profile_by_hash":function(hash,dom_id){this.profile_map['g'+hash]=dom_id;if(this.profile_stack['g'+hash]&&'object'==typeof(this.profile_stack['g'+hash])){return this.profile_stack['g'+hash]}this.profile_stack['g'+hash]='fetching';Gravatar.stat('fetch');this.load_js(this.url_prefix+'.gravatar.com/'+hash+'.json?callback=Gravatar.fetch_profile_callback',function(){Gravatar.fetch_profile_error(hash,dom_id)})},"fetch_profile_callback":function(profile){if(!profile||'object'!=typeof(profile)){return}this.profile_stack['g'+profile.entry[0].hash]=profile;this.notify(profile.entry[0].hash)},"fetch_profile_error":function(hash,dom_id){Gravatar.stat('profile_404');Gravatar.profile_map['g'+hash]=false;var grav=jQuery('#'+dom_id);if(grav.parent('a[href="http://gravatar.com/'+hash+'"]').size()){grav.unwrap()}if(dom_id==Gravatar.active_id){Gravatar.hide_card()}},"listen":function(key,callback){if(!this.notify_stack){this.notify_stack={}}key='g'+key;if(!this.notify_stack[key]){this.notify_stack[key]=[]}for(a=0;a<this.notify_stack[key].length;a++){if(callback==this.notify_stack[key][a]){return}}this.notify_stack[key][this.notify_stack[key].length]=callback},"notify":function(key){if(!this.notify_stack){this.notify_stack={}}key='g'+key;if(!this.notify_stack[key]){this.notify_stack[key]=[]}for(a=0;a<this.notify_stack[key].length;a++){if(false==this.notify_stack[key][a]||"undefined"==typeof(this.notify_stack[key][a])){continue}Gravatar[this.notify_stack[key][a]](key.substr(1));this.notify_stack[key][a]=false}},"extract_hash":function(str){hash=/gravatar.com\/avatar\/([0-9a-f]{32})/.exec(jQuery(str).attr('src'));if(null!=hash&&"object"==typeof(hash)&&2==hash.length){hash=hash[1]}else{hash=/gravatar_id\=([0-9a-f]{32})/.exec(jQuery(str).attr('src'));if(null!==hash&&"object"==typeof(hash)&&2==hash.length){hash=hash[1]}else{return false}}return hash},"load_js":function(src,error_handler){if(!this.loaded_scripts){this.loaded_scripts=[]}if(this.loaded_scripts[src]){return}this.loaded_scripts[src]=true;var new_script=document.createElement('script');new_script.src=src;new_script.type='text/javascript';if(jQuery.isFunction(error_handler)){new_script.onerror=error_handler}document.getElementsByTagName('head')[0].appendChild(new_script)},"loaded_js":function(hash,dom_id){Gravatar.profile_cb(hash,dom_id)},"add_card_css":function(){if(jQuery('#gravatar-card-css').length){return}var urlS=jQuery('script[src*="gravatar.com/js/gprofiles."]'),url;if(urlS.size()){url=urlS.attr('src').replace(/\/js\/gprofiles(?:\.dev)?\.js.*$/,'')}else{url='http://s.gravatar.com'}new_css="<link rel='stylesheet' type='text/css' id='gravatar-card-css' href='"+url+"/css/hovercard.css?v=4' />";new_css+="<link rel='stylesheet' type='text/css' id='gravatar-card-services-css' href='"+url+"/css/services.css?v=4' />";jQuery('head').append(new_css)},"md5":function(str){return hex_md5(str)},"autofill":function(email,map){if(!email.length||-1==email.indexOf('@')){return}this.autofill_map=map;hash=this.md5(email);if("undefined"==typeof(this.profile_stack['g'+hash])){this.listen(hash,'autofill_data');this.fetch_profile_by_hash(hash)}else{this.autofill_data(hash)}},"autofill_data":function(hash){GProfile.init(this.profile_stack['g'+hash]);for(var m in this.autofill_map){switch(m){case'url':link=GProfile.get('urls');jQuery('#'+this.autofill_map[m]).val(link[0]['value']);break;case'urls':links=GProfile.get('urls');links_str='';for(l=0;l<links.length;l++){links_str+=links[l]['value']+"\n"}jQuery('#'+this.autofill_map[m]).val(links_str);break;default:parts=m.split(/\./);if(parts[1]){val=GProfile.get(m);switch(parts[0]){case'ims':case'phoneNumbers':val=val.value;break;case'emails':val=val[0].value;case'accounts':val=val.url;break}jQuery('#'+this.autofill_map[m]).val(val)}else{jQuery('#'+this.autofill_map[m]).val(GProfile.get(m))}}}},"whee":function(){if(Gravatar.whee.didWhee){return}Gravatar.whee.didWhee=true;if(document.styleSheets[0].addRule){document.styleSheets[0].addRule('.grav-tag a','background-position: 22px 100% !important')}else{jQuery('.grav-tag a').css('background-position','22px 100%')}jQuery('img[src*="gravatar.com/"]').addClass('grav-whee').css({'-webkit-box-shadow':'1px 1px 3px #aaa','-moz-box-shadow':'1px 1px 3px #aaa','box-shadow':'1px 1px 3px #aaa','border':'2px white solid'});var i=0;setInterval(function(){jQuery('.grav-whee').css({'-webkit-transform':'rotate(-'+i+'deg) scale(1.3)','-moz-transform':'rotate(-'+i+'deg) scale(1.3)','transform':'rotate(-'+i+'deg) scale(1.3)'});i++;if(360==i){i=0}},6);return false},"stat":function(stat,e){Gravatar.stats_queue.push(stat);if(e){var diffWindow=e.metaKey||'_blank'==jQuery(e.currentTarget).attr('target');Gravatar.send_stats(function(){if(diffWindow){return}document.location=e.currentTarget.href});return diffWindow}if(Gravatar.stats_queue.length>10){Gravatar.send_stats()}},"send_stats":function(cb){if(!document.images){return}var stats=Gravatar.stats_queue;if(!stats.length){return}var date=new Date();Gravatar.stats_queue=[];url_prefix='http://stats';if('https:'==window.location.protocol)url_prefix='https://ssl-stats';var url=url_prefix+'.wordpress.com/g.gif?v=wpcom&x_grav-hover='+stats.join(',')+'&rand='+Math.random().toString()+'-'+date.getTime();var img=new Image(1,1);if(jQuery.isFunction(cb)){img.onload=cb}img.src=url}};var GProfile={"data":{},"init":function(data){if('fetching'==data){return false}if('undefined'==typeof(data.entry[0])){return false}GProfile.data=data.entry[0]},"get":function(attr){if(-1!=attr.indexOf('.')){parts=attr.split(/\./);if(GProfile.data[parts[0]]){if(GProfile.data[parts[0]][parts[1]]){return GProfile.data[parts[0]][parts[1]]}for(i=0,s=GProfile.data[parts[0]].length;i<s;i++){if(GProfile.data[parts[0]][i].type&&parts[1]==GProfile.data[parts[0]][i].type||GProfile.data[parts[0]][i].shortname&&parts[1]==GProfile.data[parts[0]][i].shortname||GProfile.data[parts[0]][i].primary&&parts[1]=='primary'){return GProfile.data[parts[0]][i]}}}return''}if(GProfile.data[attr]){return GProfile.data[attr]}if('url'==attr){if(GProfile.data.urls.length){return GProfile.data.urls[0].value}}return''}};var grav_resize={card_id:'',orig_width:0,orig_height:0,orig_top:0,orig_left:0,current_image:false,init:function(card_id){grav_resize.card_id=card_id;grav_resize.bind_enlarge()},enlarge:function(el){if(jQuery('img.grav-large').stop().remove().size()){grav_resize.current_image=false;return}grav_resize.current_image=el.attr('src');jQuery('#'+grav_resize.card_id+' .grav-tag a').css('background-position','22px 100%');var fullsize=jQuery('<img />').attr('src',grav_resize.current_image+'&size=400').load(function(){jQuery('#'+grav_resize.card_id+' .grav-tag a').css('background-position','22px 0')});var the_clone=el.clone();the_clone.css({'position':'absolute','top':grav_resize.orig_top,'left':grav_resize.orig_left,'background-color':'#333','width':grav_resize.orig_width,'height':grav_resize.orig_height,'border-color':'#555'});the_clone.appendTo(el.parent());var horiz_padding=0;var vert_padding=0;var border_width=6;var card=jQuery('#'+grav_resize.card_id+' .grav-inner');if(el.width()>el.height()){var ratio=el.height()/el.width();var width=card.outerWidth();var height=(width*ratio);var vert_padding=(card.outerHeight()-height)/2;if(height>card.outerHeight()){var ratio=el.width()/el.height();var height=card.outerHeight();var width=(height*ratio);var horiz_padding=(card.outerWidth()-width)/2}}else{var ratio=el.width()/el.height();var height=card.outerHeight();var width=(height*ratio);var horiz_padding=(card.outerWidth()-width)/2}the_clone.stop().animate({'top':0,'left':0,'width':width-border_width+'px','height':height-border_width+'px','z-index':99,'padding-left':horiz_padding+'px','padding-right':horiz_padding+'px','padding-top':vert_padding+'px','padding-bottom':vert_padding+'px'},250,function(){the_clone.addClass('grav-large');the_clone.attr('src',fullsize.attr('src'));the_clone.parent().append('<div class="grav-large-close">X</div>');jQuery('.grav-large-close').hide().fadeIn(100)});jQuery('#'+grav_resize.card_id+' .grav-gallery img').unbind('click');jQuery('.grav-large-close').live('click',function(){grav_resize.reduce(the_clone)});jQuery(the_clone).click(function(){grav_resize.reduce(the_clone)})},reduce:function(el){jQuery('.grav-large-close').remove();el.stop().animate({'top':grav_resize.orig_top,'left':grav_resize.orig_left,'width':grav_resize.orig_width,'height':grav_resize.orig_height,'padding-left':0,'padding-right':0,'padding-top':0,'padding-bottom':0},250,function(){jQuery('img.grav-large').remove();grav_resize.bind_enlarge(grav_resize.card_id);grav_resize.current_image=false})},bind_enlarge:function(){jQuery('#'+grav_resize.card_id+' .grav-gallery img').parent('a').click(function(e){if(jQuery.browser.msie&&jQuery.browser.version<9.0)return;e.preventDefault();if(grav_resize.current_image){return}var img=jQuery(this).find('img').not('.grav-large');var position=img.position();grav_resize.orig_width=img.width();grav_resize.orig_height=img.height();grav_resize.orig_top=position.top;grav_resize.orig_left=position.left;grav_resize.enlarge(img)})}};var grav_gallery={orig_left:0,pos:0,init:function(card){grav_gallery.bind_arrows(card,true);jQuery('#'+card+' .grav-gallery').mouseover(function(){grav_gallery.bind_arrows(card,false)})},bind_arrows:function(card,reset){var gallery_el=jQuery('#'+card+' .grav-gallery ul');if(!gallery_el.size()){return}grav_gallery.orig_left=gallery_el.css('margin-left').replace('px','');grav_gallery.pos=gallery_el.find('li:last').position();jQuery('#'+card+' a.grav-gallery-next').live('click',function(){if(grav_gallery.pos.left>275){gallery_el.animate({'margin-left':parseFloat(grav_gallery.orig_left)-314+'px'},300,function(){grav_gallery.highlight_arrows(card,false)})}return false});jQuery('#'+card+' a.grav-gallery-prev').live('click',function(){if(0!=grav_gallery.orig_left){gallery_el.animate({'margin-left':parseFloat(grav_gallery.orig_left)+314+'px'},300,function(){grav_gallery.highlight_arrows(card,false)})}return false});if(reset){jQuery('#'+card+' .grav-gallery ul').css({'margin-left':0})}grav_gallery.highlight_arrows(card,true)},highlight_arrows:function(card){grav_gallery.orig_left=jQuery('#'+card+' .grav-gallery ul').css('margin-left').replace('px','');grav_gallery.last=jQuery('#'+card+' .grav-gallery ul li:last');if(grav_gallery.last.position().left<275){jQuery('#'+card+' a.grav-gallery-next').css({'background-position':'-39px 0'})}else{jQuery('#'+card+' a.grav-gallery-next').css({'background-position':'-26px 0'})}if(0!=grav_gallery.orig_left){jQuery('#'+card+' a.grav-gallery-prev').css({'background-position':'0 0'})}else{jQuery('#'+card+' a.grav-gallery-prev').css({'background-position':'-13px 0'})}}};var hexcase=0;var b64pad="";var chrsz=8;function hex_md5(s){return binl2hex(core_md5(str2binl(s),s.length*chrsz))}function b64_md5(s){return binl2b64(core_md5(str2binl(s),s.length*chrsz))}function str_md5(s){return binl2str(core_md5(str2binl(s),s.length*chrsz))}function hex_hmac_md5(a,b){return binl2hex(core_hmac_md5(a,b))}function b64_hmac_md5(a,b){return binl2b64(core_hmac_md5(a,b))}function str_hmac_md5(a,b){return binl2str(core_hmac_md5(a,b))}function md5_vm_test(){return hex_md5("abc")=="900150983cd24fb0d6963f7d28e17f72"}function core_md5(x,e){x[e>>5]|=0x80<<((e)%32);x[(((e+64)>>>9)<<4)+14]=e;var a=1732584193;var b=-271733879;var c=-1732584194;var d=271733878;for(var i=0;i<x.length;i+=16){var f=a;var g=b;var h=c;var j=d;a=md5_ff(a,b,c,d,x[i+0],7,-680876936);d=md5_ff(d,a,b,c,x[i+1],12,-389564586);c=md5_ff(c,d,a,b,x[i+2],17,606105819);b=md5_ff(b,c,d,a,x[i+3],22,-1044525330);a=md5_ff(a,b,c,d,x[i+4],7,-176418897);d=md5_ff(d,a,b,c,x[i+5],12,1200080426);c=md5_ff(c,d,a,b,x[i+6],17,-1473231341);b=md5_ff(b,c,d,a,x[i+7],22,-45705983);a=md5_ff(a,b,c,d,x[i+8],7,1770035416);d=md5_ff(d,a,b,c,x[i+9],12,-1958414417);c=md5_ff(c,d,a,b,x[i+10],17,-42063);b=md5_ff(b,c,d,a,x[i+11],22,-1990404162);a=md5_ff(a,b,c,d,x[i+12],7,1804603682);d=md5_ff(d,a,b,c,x[i+13],12,-40341101);c=md5_ff(c,d,a,b,x[i+14],17,-1502002290);b=md5_ff(b,c,d,a,x[i+15],22,1236535329);a=md5_gg(a,b,c,d,x[i+1],5,-165796510);d=md5_gg(d,a,b,c,x[i+6],9,-1069501632);c=md5_gg(c,d,a,b,x[i+11],14,643717713);b=md5_gg(b,c,d,a,x[i+0],20,-373897302);a=md5_gg(a,b,c,d,x[i+5],5,-701558691);d=md5_gg(d,a,b,c,x[i+10],9,38016083);c=md5_gg(c,d,a,b,x[i+15],14,-660478335);b=md5_gg(b,c,d,a,x[i+4],20,-405537848);a=md5_gg(a,b,c,d,x[i+9],5,568446438);d=md5_gg(d,a,b,c,x[i+14],9,-1019803690);c=md5_gg(c,d,a,b,x[i+3],14,-187363961);b=md5_gg(b,c,d,a,x[i+8],20,1163531501);a=md5_gg(a,b,c,d,x[i+13],5,-1444681467);d=md5_gg(d,a,b,c,x[i+2],9,-51403784);c=md5_gg(c,d,a,b,x[i+7],14,1735328473);b=md5_gg(b,c,d,a,x[i+12],20,-1926607734);a=md5_hh(a,b,c,d,x[i+5],4,-378558);d=md5_hh(d,a,b,c,x[i+8],11,-2022574463);c=md5_hh(c,d,a,b,x[i+11],16,1839030562);b=md5_hh(b,c,d,a,x[i+14],23,-35309556);a=md5_hh(a,b,c,d,x[i+1],4,-1530992060);d=md5_hh(d,a,b,c,x[i+4],11,1272893353);c=md5_hh(c,d,a,b,x[i+7],16,-155497632);b=md5_hh(b,c,d,a,x[i+10],23,-1094730640);a=md5_hh(a,b,c,d,x[i+13],4,681279174);d=md5_hh(d,a,b,c,x[i+0],11,-358537222);c=md5_hh(c,d,a,b,x[i+3],16,-722521979);b=md5_hh(b,c,d,a,x[i+6],23,76029189);a=md5_hh(a,b,c,d,x[i+9],4,-640364487);d=md5_hh(d,a,b,c,x[i+12],11,-421815835);c=md5_hh(c,d,a,b,x[i+15],16,530742520);b=md5_hh(b,c,d,a,x[i+2],23,-995338651);a=md5_ii(a,b,c,d,x[i+0],6,-198630844);d=md5_ii(d,a,b,c,x[i+7],10,1126891415);c=md5_ii(c,d,a,b,x[i+14],15,-1416354905);b=md5_ii(b,c,d,a,x[i+5],21,-57434055);a=md5_ii(a,b,c,d,x[i+12],6,1700485571);d=md5_ii(d,a,b,c,x[i+3],10,-1894986606);c=md5_ii(c,d,a,b,x[i+10],15,-1051523);b=md5_ii(b,c,d,a,x[i+1],21,-2054922799);a=md5_ii(a,b,c,d,x[i+8],6,1873313359);d=md5_ii(d,a,b,c,x[i+15],10,-30611744);c=md5_ii(c,d,a,b,x[i+6],15,-1560198380);b=md5_ii(b,c,d,a,x[i+13],21,1309151649);a=md5_ii(a,b,c,d,x[i+4],6,-145523070);d=md5_ii(d,a,b,c,x[i+11],10,-1120210379);c=md5_ii(c,d,a,b,x[i+2],15,718787259);b=md5_ii(b,c,d,a,x[i+9],21,-343485551);a=safe_add(a,f);b=safe_add(b,g);c=safe_add(c,h);d=safe_add(d,j)}return Array(a,b,c,d)}function md5_cmn(q,a,b,x,s,t){return safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b)}function md5_ff(a,b,c,d,x,s,t){return md5_cmn((b&c)|((~b)&d),a,b,x,s,t)}function md5_gg(a,b,c,d,x,s,t){return md5_cmn((b&d)|(c&(~d)),a,b,x,s,t)}function md5_hh(a,b,c,d,x,s,t){return md5_cmn(b^c^d,a,b,x,s,t)}function md5_ii(a,b,c,d,x,s,t){return md5_cmn(c^(b|(~d)),a,b,x,s,t)}function core_hmac_md5(a,b){var c=str2binl(a);if(c.length>16)c=core_md5(c,a.length*chrsz);var d=Array(16),opad=Array(16);for(var i=0;i<16;i++){d[i]=c[i]^0x36363636;opad[i]=c[i]^0x5C5C5C5C}var e=core_md5(d.concat(str2binl(b)),512+b.length*chrsz);return core_md5(opad.concat(e),512+128)}function safe_add(x,y){var a=(x&0xFFFF)+(y&0xFFFF);var b=(x>>16)+(y>>16)+(a>>16);return(b<<16)|(a&0xFFFF)}function bit_rol(a,b){return(a<<b)|(a>>>(32-b))}function str2binl(a){var b=Array();var c=(1<<chrsz)-1;for(var i=0;i<a.length*chrsz;i+=chrsz)b[i>>5]|=(a.charCodeAt(i/chrsz)&c)<<(i%32);return b}function binl2str(a){var b="";var c=(1<<chrsz)-1;for(var i=0;i<a.length*32;i+=chrsz)b+=String.fromCharCode((a[i>>5]>>>(i%32))&c);return b}function binl2hex(a){var b=hexcase?"0123456789ABCDEF":"0123456789abcdef";var c="";for(var i=0;i<a.length*4;i++){c+=b.charAt((a[i>>2]>>((i%4)*8+4))&0xF)+b.charAt((a[i>>2]>>((i%4)*8))&0xF)}return c}function binl2b64(a){var b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var c="";for(var i=0;i<a.length*4;i+=3){var d=(((a[i>>2]>>8*(i%4))&0xFF)<<16)|(((a[i+1>>2]>>8*((i+1)%4))&0xFF)<<8)|((a[i+2>>2]>>8*((i+2)%4))&0xFF);for(var j=0;j<4;j++){if(i*8+j*6>a.length*32)c+=b64pad;else c+=b.charAt((d>>6*(3-j))&0x3F)}}return c};</script> <script type="text/javascript">/* <![CDATA[ */
var WPGroHo = {
	my_hash: ""
};
/* ]]> */
</script> <script type="text/javascript" style="display: none;">WPGroHo=jQuery.extend({my_hash:'',data:{},renderers:{},syncProfileData:function(hash,id){if(!WPGroHo.data[hash]){WPGroHo.data[hash]={};a=jQuery('div.grofile-hash-map-'+hash+' span').each(function(){WPGroHo.data[hash][this.className]=jQuery(this).text();});}
WPGroHo.appendProfileData(WPGroHo.data[hash],hash,id);},appendProfileData:function(data,hash,id){for(var key in data){if(jQuery.isFunction(WPGroHo.renderers[key])){return WPGroHo.renderers[key](data[key],hash,id,key);}
jQuery('#'+id).find('h4').after(jQuery('<p class="grav-extra '+key+'" />').html(data[key]));}}},WPGroHo);jQuery(document).ready(function($){Gravatar.profile_cb=function(h,d){WPGroHo.syncProfileData(h,d);};Gravatar.my_hash=WPGroHo.my_hash;Gravatar.init('body','#wpadminbar');});</script><div style="display: none;"></div><script type="text/javascript" src="13_files/beacon.js"></script><script type="text/javascript">try{COMSCORE.beacon({c1:2,c2:7518284});}catch(e){}</script><noscript><p
class="robots-nocontent"><img
src="http://b.scorecardresearch.com/p?cj=1c1=2&#038;c2=7518284" alt=""
style="display:none" width="1" height="1" /></p></noscript><script type="text/javascript" style="display: none;">eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return p}('c(!1q.2X){h 2X=l(){h p={6b:{"1s-R":"","84-2y":1,"83-2y-7W":I,"1I":v,"8d-89":I,"1H-2Q":4,"3g":I,"1w":I,"66":N,"8k-8l":I,"88":N,"5h-1p":I,"1L-1l":N},M:{4T:I,69:v,5l:16,5k:16,8B:N,8f:N,8s:"54",1f:{5q:"53 1g",5d:"9N 1g",5i:"9O 6q 6p",78:"9M C 9L 1V 9I 6p 9J",3t:"3t",6C:"?",1A:"2X\\n\\n",6T:"9K\'t 9P 2O D: ",7x:"9Q 9W\'t 9X D 1L-1l 9V: ",77:"<!9U 1L 9R \\"-//9S//6H 9T 1.0 9H//9G\\" \\"2s://5x.6x.6B/9v/6D/6H/6D-9w.9u\\"><1L 9t=\\"2s://5x.6x.6B/9s/9x\\"><6z><9y 2s-9E=\\"9F-9D\\" 63=\\"1X/1L; 9C=9z-8\\" /><3i>9A 2X</3i></6z><33 1m=\\"39-9Y:9Z,an,ao,am-al;ai-3f:#aj;3f:#ak;39-2Q:ap;1X-6G:6u;\\"><A 1m=\\"1X-6G:6u;6w-4w:aw;\\"><A 1m=\\"39-2Q:au-at;\\">2X</A><A 1m=\\"39-2Q:.as;6w-9p:ah;\\"><A>6O 2.1.ag (a5 15 6h)</A><A><a 27=\\"2s://6I.3k\\" a6=\\"4k\\" 1m=\\"3f:#6F;1X-6t:6L;\\">2s://6I.3k</a></A><A>a3 a0 a1 f 1l, a2 <a 27=\\"a7://5x.a8.3k/ae-af/ad?ac=a9-aa&ab=ax\\" 1m=\\"3f:#6F;1X-6t:6L;\\">8R</a> 6q 8Q 8O 8W!</A></A><A>8V C 8U 8X.</A><A>8K 8N-6h 8M 8S.</A></A></33></1L>"},8u:N},1r:{4Z:v,9o:v,3m:v,6f:{}},2d:{},8h:{9g:/\\/\\*[\\s\\S]*?\\*\\//3b,9d:/\\/\\/.*$/3b,9e:/#.*$/3b,9j:/"([^\\\\"\\n]|\\\\.)*"/g,9n:/\'([^\\\\\'\\n]|\\\\.)*\'/g,9m:/"([^\\\\"]|\\\\.)*"/g,8Y:/\'([^\\\\\']|\\\\.)*\'/g,9k:/(&X;|<)!--[\\s\\S]*?--(&Z;|>)/3b,43:/&X;\\w+:\\/\\/[\\w-.\\/?%&=@:;]*&Z;|\\w+:\\/\\/[\\w-.\\/?%&=@:;]*/g,9c:{G:/(&X;|<)\\?=?/g,1d:/\\?(&Z;|>)/g},93:{G:/(&X;|<)%=?/g,1d:/%(&Z;|>)/g},92:{G:/(&X;|<)\\s*1l.*?(&Z;|>)/4e,1d:/(&X;|<)\\/\\s*1l\\s*(&Z;|>)/4e}},1w:{1c:l(3O){h 3T=Q.22("3Y"),5s=p.1w.7d;3T.L="1w";D(h 30 1V 5s){h 6i=5s[30],5t=W 6i(3O),1Y=5t.1c();3O.6g[30]=5t;c(1Y==v){1J}c(7X(1Y)=="91"){1Y=p.1w.6m(1Y,3O.1k,30)}1Y.L+="5v "+30;3T.2p(1Y)}q 3T},6m:l(5L,7j,5K){h a=Q.22("a"),5N=a.1m,5D=p.M,5M=5D.5l,5J=5D.5k;a.27="#"+5K;a.3i=5L;a.5j=7j;a.76=5K;a.1Q=5L;c(40(5M)==N){5N.26=5M+"75"}c(40(5J)==N){5N.2e=5J+"75"}a.9l=l(e){97{p.1w.6M(f,e||1q.6Y,f.5j,f.76)}98(e){p.B.1A(e.6n)}q N};q a},6M:l(7i,7g,7b,7h,7f){h 5G=p.1r.6f[7b],5H;c(5G==v||(5H=5G.6g[7h])==v){q v}q 5H.2z(7i,7g,7f)},7d:{5q:l(5b){f.1c=l(){c(5b.V("66")!=I){q}q p.M.1f.5q};f.2z=l(5c,8T,8P){h A=5b.A;5c.7y.4p(5c);A.L=A.L.E("5O","")}},5d:l(6R){f.1c=l(){q p.M.1f.5d};f.2z=l(b1,bU,bV){h 3J=p.B.3d(6R.5g).E(/</g,"&X;"),2A=p.B.4z("","4k",bT,bS,"bQ=0, bR=1, bW=0, 7a=1");3J=p.B.2T(3J);2A.Q.3D("<54>"+3J+"</54>");2A.Q.4o()}},5i:l(64){h 3C,c2,6a=64.1k;f.1c=l(){h 2V=p.M;c(2V.69==v){q v}l 1E(56){h 5m="";D(h 5f 1V 56){5m+="<c1 R=\'"+5f+"\' 24=\'"+56[5f]+"\'/>"}q 5m};l 2i(5n){h 5p="";D(h 5o 1V 5n){5p+=" "+5o+"=\'"+5n[5o]+"\'"}q 5p};h 67={26:2V.5l,2e:2V.5k,1k:6a+"bY",4r:"bZ/x-71-6V",3i:p.M.1f.5i},5V={bE:"ay",bD:"bC",bA:"5j="+6a,c4:"N"},5U=2V.69,3x;c(/bG/i.1R(6K.7k)){3x="<4h"+2i({bH:"bM:bN-bL-bK-bI-bJ",c3:"2s://ck.cj.3k/cm/71/c9/6V/c8.c7#6O=9,0,0,0"})+2i(67)+">"+1E(5V)+1E({c6:5U})+"</4h>"}F{3x="<ca"+2i(67)+2i(5V)+2i({cg:5U})+"/>"}3C=Q.22("A");3C.1Q=3x;q 3C};f.2z=l(cf,ce,62){h 7c=62.cd;6U(7c){2K"7q":h 61=p.B.2T(p.B.3d(64.5g).E(/&X;/g,"<").E(/&Z;/g,">").E(/&aT;/g,"&"));c(1q.74){1q.74.aU("1X",61)}F{q p.B.2T(61)}2K"aR":p.B.1A(p.M.1f.78);2h;2K"aP":p.B.1A(62.6n);2h}}},aV:l(65){f.1c=l(){q p.M.1f.3t};f.2z=l(aW,bz,b0){h 1Z=Q.22("aZ"),1N=v;c(p.1r.3m!=v){Q.33.4p(p.1r.3m)}p.1r.3m=1Z;1Z.1m.aX="aY:aO;26:6r;2e:6r;G:-6j;4w:-6j;";Q.33.2p(1Z);1N=1Z.5Q.Q;6J(1N,1q.Q);1N.3D("<A 1s=\\""+65.A.L.E("5O","")+" aD\\">"+65.A.1Q+"</A>");1N.4o();1Z.5Q.4F();1Z.5Q.3t();l 6J(6N,6E){h 2I=6E.4O("4n");D(h i=0;i<2I.u;i++){c(2I[i].6y.6P()=="6A"&&/aE\\.1a$/.1R(2I[i].27)){6N.3D("<4n 4r=\\"1X/1a\\" 6y=\\"6A\\" 27=\\""+2I[i].27+"\\"></4n>")}}}}},az:l(aA){f.1c=l(){q p.M.1f.6C};f.2z=l(aF,aG){h 2A=p.B.4z("","4k",aM,aK,"7a=0"),1N=2A.Q;1N.3D(p.M.1f.77);1N.4o();2A.4F()}}}},B:{Y:l(49,73,3y){3y=3e.aH(3y||0,0);D(h i=3y;i<49.u;i++){c(49[i]==73){q i}}q-1},6d:l(72){q 72+3e.aI(3e.b2()*b3).2u()},6c:l(51,4L){h 3h={},1W;D(1W 1V 51){3h[1W]=51[1W]}D(1W 1V 4L){3h[1W]=4L[1W]}q 3h},80:l(4J){6U(4J){2K"I":q I;2K"N":q N}q 4J},4z:l(43,6W,4B,4H,2N){h x=(6X.26-4B)/2,y=(6X.2e-4H)/2;2N+=", G="+x+", 4w="+y+", 26="+4B+", 2e="+4H;2N=2N.E(/^,/,"");h 4E=1q.bk(43,6W,2N);4E.4F();q 4E},7C:l(1G,1T,1U){c(1G.6Z){1G["e"+1T+1U]=1U;1G[1T+1U]=l(){1G["e"+1T+1U](1q.6Y)};1G.6Z("bw"+1T,1G[1T+1U])}F{1G.bv(1T,1U,N)}},1A:l(z){1A(p.M.1f.1A+z)},4u:l(4N,6Q){h 2r=p.1r.4Z,3V=v;c(2r==v){2r={};D(h 2L 1V p.2d){h 42=p.2d[2L].bu;c(42==v){1J}p.2d[2L].R=2L.6P();D(h i=0;i<42.u;i++){2r[42[i]]=2L}}p.1r.4Z=2r}3V=p.2d[2r[4N]];c(3V==v&&6Q!=N){p.B.1A(p.M.1f.6T+4N)}q 3V},46:l(z,6S){h 2E=z.1P("\\n");D(h i=0;i<2E.u;i++){2E[i]=6S(2E[i])}q 2E.5A("\\n")},8C:l(z){q z.E(/^[ ]*[\\n]+|[\\n]*[ ]*$/g,"")},8H:l(z){h 3X,45={},4P=W U("^\\\\[(?<4c>(.*?))\\\\]$"),7e=W U("(?<R>[\\\\w-]+)"+"\\\\s*:\\\\s*"+"(?<24>"+"[\\\\w-%#]+|"+"\\\\[.*?\\\\]|"+"\\".*?\\"|"+"\'.*?\'"+")\\\\s*;?","g");2j((3X=7e.T(z))!=v){h 2f=3X.24.E(/^[\'"]|[\'"]$/g,"");c(2f!=v&&4P.1R(2f)){h m=4P.T(2f);2f=m.4c.u>0?m.4c.1P(/\\s*,\\s*/):[]}45[3X.R]=2f}q 45},7K:l(z,1a){c(z==v||z.u==0||z=="\\n"){q z}z=z.E(/</g,"&X;");z=z.E(/ {2,}/g,l(m){h 4t="";D(h i=0;i<m.u-1;i++){4t+="&2B;"}q 4t+" "});c(1a!=v){z=p.B.46(z,l(2l){c(2l.u==0){q""}h 3W="";2l=2l.E(/^(&2B;| )+/,l(s){3W=s;q""});c(2l.u==0){q 3W}q 3W+"<C 1s=\\""+1a+"\\">"+2l+"</C>"})}q z},7V:l(6l,6o){h 32=6l.2u();2j(32.u<6o){32="0"+32}q 32},6k:l(){h 3w=Q.22("A"),3B,3o=0,44=Q.33,1k=p.B.6d("6k"),36="<A 1s=\\"",2Y="</A>",4U="</4G>";3w.1Q=36+"6e\\">"+36+"1p\\">"+36+"2y\\">"+36+"63"+"\\"><4G 1s=\\"b5\\"><4G 1k=\\""+1k+"\\">&2B;"+4U+4U+2Y+2Y+2Y+2Y;44.2p(3w);3B=Q.bb(1k);c(/bg/i.1R(6K.7k)){h 6v=1q.be(3B,v);3o=85(6v.bc("26"))}F{3o=3B.bd}44.4p(3w);q 3o},8b:l(79,6s){h 1H="";D(h i=0;i<6s;i++){1H+=" "}q 79.E(/\\t/g,1H)},8a:l(2Z,4f){h bF=2Z.1P("\\n"),1H="\\t",4d="";D(h i=0;i<50;i++){4d+="                    "}l 8x(3s,18,8A){q 3s.29(0,18)+4d.29(0,8A)+3s.29(18+1,3s.u)};2Z=p.B.46(2Z,l(20){c(20.Y(1H)==-1){q 20}h 18=0;2j((18=20.Y(1H))!=-1){h 8w=4f-18%4f;20=8x(20,18,8w)}q 20});q 2Z},3d:l(z){h br=/<br\\s*\\/?>|&X;br\\s*\\/?&Z;/4e;c(p.M.8B==I){z=z.E(br,"\\n")}c(p.M.8f==I){z=z.E(br,"")}q z},2G:l(z){q z.E(/^\\s+|\\s+$/g,"")},2T:l(z){h 21=p.B.3d(z).1P("\\n"),bf=W bh(),8D=/^\\s*/,2a=ba;D(h i=0;i<21.u&&2a>0;i++){h 4x=21[i];c(p.B.2G(4x).u==0){1J}h 4I=8D.T(4x);c(4I==v){q z}2a=3e.2a(4I[0].u,2a)}c(2a>0){D(h i=0;i<21.u;i++){21[i]=21[i].29(2a)}}q 21.5A("\\n")},82:l(35,31){c(35.H<31.H){q-1}F{c(35.H>31.H){q 1}F{c(35.u<31.u){q-1}F{c(35.u>31.u){q 1}}}}q 0},2D:l(8q,34){l 8n(4D,8r){q[W p.4v(4D[0],4D.H,8r.1a)]};h b4=0,4s=v,3L=[],8p=34.4X?34.4X:8n;2j((4s=34.3K.T(8q))!=v){3L=3L.2t(8p(4s,34))}q 3L},8m:l(8o){h X="&X;",Z="&Z;";q 8o.E(p.8h.43,l(m){h 4j="",47="";c(m.Y(X)==0){47=X;m=m.3U(X.u)}c(m.Y(Z)==m.u-Z.u){m=m.3U(0,m.u-Z.u);4j=Z}q 47+"<a 27=\\""+m+"\\">"+m+"</a>"+4j})},8v:l(){h 3N=Q.4O("1l"),4i=[];D(h i=0;i<3N.u;i++){c(3N[i].4r=="6e"){4i.K(3N[i])}}q 4i},8I:l(4b){h 4q="<![b6[",3S="]]>",1v=p.B.2G(4b),3R=N;c(1v.Y(4q)==0){1v=1v.3U(4q.u);3R=I}c(1v.Y(3S)==1v.u-3S.u){1v=1v.3U(0,1v.u-3S.u);3R=I}q 3R?1v:4b}},1I:l(8E,4R){l 8e(4g){h 4Q=[];D(h i=0;i<4g.u;i++){4Q.K(4g[i])}q 4Q};h 2q=4R?[4R]:8e(Q.4O(p.M.8s)),8J="1Q",2k=v,4S=p.M;c(4S.4T){2q=2q.2t(p.B.8v())}c(2q.u===0){q}D(h i=0;i<2q.u;i++){h 2M=2q[i],28=p.B.8H(2M.L),1D,2W,25;28=p.B.6c(8E,28);1D=28["2O"];c(1D==v){1J}c(28["1L-1l"]=="I"||p.6b["1L-1l"]==I){2k=W p.4a(1D);1D="b9"}F{h 3P=p.B.4u(1D);c(3P){1D=3P.R;2k=W 3P()}F{1J}}2W=2M[8J];c(4S.4T){2W=p.B.8I(2W)}28["2O-R"]=1D;2k.1I(2W,28);25=2k.A;c(p.M.8u){25=Q.22("bj");25.24=2k.A.1Q;25.1m.26="bt";25.1m.2e="bx"}2M.7y.bs(25,2M)}},bq:l(7H){p.B.7C(1q,"bl",l(){p.1I(7H)})}};p.4v=l(4A,7G,1a){f.24=4A;f.H=7G;f.u=4A.u;f.1a=1a;f.5Y=v};p.4v.14.2u=l(){q f.24};p.4a=l(4K){h 3z=p.B.4u(4K),2g,4W=W p.2d.bm(),bn=v;c(3z==v){q}2g=W 3z();f.4m=4W;c(2g.3I==v){p.B.1A(p.M.1f.7x+4K);q}4W.59.K({3K:2g.3I.C,4X:7p});l 3A(4Y,7w){D(h j=0;j<4Y.u;j++){4Y[j].H+=7w}};l 7p(19,bp){h 7n=19.C,1o=[],4M=2g.59,7l=19.H+19.G.u,2U=2g.3I,1n;D(h i=0;i<4M.u;i++){1n=p.B.2D(7n,4M[i]);3A(1n,7l);1o=1o.2t(1n)}c(2U.G!=v&&19.G!=v){1n=p.B.2D(19.G,2U.G);3A(1n,19.H);1o=1o.2t(1n)}c(2U.1d!=v&&19.1d!=v){1n=p.B.2D(19.1d,2U.1d);3A(1n,19.H+19[0].bo(19.1d));1o=1o.2t(1n)}D(h j=0;j<1o.u;j++){1o[j].5Y=3z.R}q 1o}};p.4a.14.1I=l(7t,7s){f.4m.1I(7t,7s);f.A=f.4m.A};p.7I=l(){};p.7I.14={V:l(7J,7Z){h 4l=f.1E[7J];q p.B.80(4l==v?7Z:4l)},1c:l(7Y){q Q.22(7Y)},8i:l(2F,81){h 3u=[];c(2F!=v){D(h i=0;i<2F.u;i++){c(7X(2F[i])=="4h"){3u=3u.2t(p.B.2D(81,2F[i]))}}}q 3u.aB(p.B.82)},86:l(){h 23=f.2C;D(h i=0;i<23.u;i++){c(23[i]===v){1J}h 2x=23[i],4V=2x.H+2x.u;D(h j=i+1;j<23.u&&23[i]!==v;j++){h 1S=23[j];c(1S===v){1J}F{c(1S.H>4V){2h}F{c(1S.H==2x.H&&1S.u>2x.u){f.2C[i]=v}F{c(1S.H>=2x.H&&1S.H<4V){f.2C[j]=v}}}}}}},8t:l(2H){h 3r=2H.1P(/\\n/g),3n=85(f.V("84-2y")),2v=f.V("83-2y-7W"),7N=f.V("1I",[]),7U=f.V("3g");2H="";c(2v==I){2v=(3n+3r.u-1).2u().u}F{c(40(2v)==I){2v=0}}D(h i=0;i<3r.u;i++){h 1x=3r[i],60=/^(&2B;|\\s)+/.T(1x),52="aN"+(i%2==0?1:2),7F=p.B.7V(3n+i,2v),7P=p.B.Y(7N,(3n+i).2u())!=-1,2S=v;c(60!=v){2S=60[0].2u();1x=1x.29(2S.u)}1x=p.B.2G(1x);c(1x.u==0){1x="&2B;"}c(7P){52+=" aQ"}2H+="<A 1s=\\"2y "+52+"\\">"+"<7L>"+"<7T>"+(7U?"<3F 1s=\\"aS\\"><C>"+7F+"</C></3F>":"")+"<3F 1s=\\"63\\">"+(2S!=v?"<C 1s=\\"by\\">"+2S.E(" ","&2B;")+"</C>":"")+1x+"</3F>"+"</7T>"+"</7L>"+"</A>"}q 2H},8y:l(5X,5T){h 18=0,3c="",3a=p.B.7K,5S=f.V("2O-R","");l 5W(5Z){h 5R=5Z?(5Z.5Y||5S):5S;q 5R?5R+" ":""};D(h i=0;i<5T.u;i++){h 1y=5T[i],3G;c(1y===v||1y.u===0){1J}3G=5W(1y);3c+=3a(5X.29(18,1y.H-18),3G+"7O")+3a(1y.24,3G+1y.1a);18=1y.H+1y.u}3c+=3a(5X.29(18),5W()+"7O");q 3c},1I:l(C,7E){h cb=p.M,1r=p.1r,A,ci,3Z,ch="cn";f.1E={};f.A=v;f.1p=v;f.C=v;f.1i=v;f.6g={};f.1k=p.B.6d("cl");1r.6f[f.1k]=f;c(C===v){C=""}f.1E=p.B.6c(p.6b,7E||{});c(f.V("88")==I){f.1E.1w=f.1E.3g=N}f.A=A=f.1c("3Y");f.1p=f.1c("3Y");f.1p.L="1p";L="6e";A.1k=f.1k;c(f.V("66")){L+=" 5O"}c(f.V("3g")==N){L+=" bB"}c(f.V("5h-1p")==N){f.1p.L+=" bO-5h"}L+=" "+f.V("1s-R");L+=" "+f.V("2O-R");A.L=L;f.5g=C;f.C=p.B.8C(C).E(/\\r/g," ");3Z=f.V("1H-2Q");f.C=f.V("8d-89")==I?p.B.8a(f.C,3Z):p.B.8b(f.C,3Z);f.C=p.B.2T(f.C);c(f.V("1w")){f.1i=f.1c("3Y");f.1i.L="1i";f.1i.2p(p.1w.1c(f));A.2p(f.1i);h 1i=f.1i;l 58(){1i.L=1i.L.E("53","")};A.c0=l(){58();1i.L+=" 53"};A.bX=l(){58()}}A.2p(f.1p);f.2C=f.8i(f.59,f.C);f.86();C=f.8y(f.C,f.2C);C=f.8t(p.B.2G(C));c(f.V("8k-8l")){C=p.B.8m(C)}f.1p.1Q=C},9f:l(z){z=z.E(/^\\s+|\\s+$/g,"").E(/\\s+/g,"|");q"\\\\b(?:"+z+")\\\\b"},9i:l(2J){f.3I={G:{3K:2J.G,1a:"1l"},1d:{3K:2J.1d,1a:"1l"},C:W U("(?<G>"+2J.G.1g+")"+"(?<C>.*?)"+"(?<1d>"+2J.1d.1g+")","96")}}};q p}()}c(!1q.U){(l(){h 2w={T:10.14.T,87:5I.14.87,E:5I.14.E,1P:5I.14.1P},1F={13:/(?:[^\\\\([#\\s.]+|\\\\(?!k<[\\w$]+>|[7z]{[^}]+})[\\S\\s]?|\\((?=\\?(?!#|<[\\w$]+>)))+|(\\()(?:\\?(?:(#)[^)]*\\)|<([$\\w]+)>))?|\\\\(?:k<([\\w$]+)>|[7z]{([^}]+)})|(\\[\\^?)|([\\S\\s])/g,99:/(?:[^$]+|\\$(?![1-9$&`\']|{[$\\w]+}))+|\\$(?:([1-9]\\d*|[$&`\'])|{([$\\w]+)})/g,37:/^(?:\\s+|#.*)+/,5B:/^(?:[?*+]|{\\d+(?:,\\d*)?})/,7Q:/&&\\[\\^?/g,7S:/]/g},7o=l(5C,5v,5u){D(h i=5u||0;i<5C.u;i++){c(5C[i]===5v){q i}}q-1},8G=/()??/.T("")[1]!==3j,3q={};U=l(1e,1O){c(1e 68 10){c(1O!==3j){3H 7r("4y\'t 4C 9a 8z 95 7u 10 5u 94")}q 1e.3E()}h 1O=1O||"",7R=1O.Y("s")>-1,7M=1O.Y("x")>-1,5z=N,3v=[],1b=[],13=1F.13,J,cc,38,3M,3p;13.O=0;2j(J=2w.T.2n(13,1e)){c(J[2]){c(!1F.5B.1R(1e.17(13.O))){1b.K("(?:)")}}F{c(J[1]){3v.K(J[3]||v);c(J[3]){5z=I}1b.K("(")}F{c(J[4]){3M=7o(3v,J[4]);1b.K(3M>-1?"\\\\"+(3M+1)+(40(1e.5w(13.O))?"":"(?:)"):J[0])}F{c(J[5]){1b.K(3q.7m?3q.7m.7q(J[5],J[0].5w(1)==="P"):J[0])}F{c(J[6]){c(1e.5w(13.O)==="]"){1b.K(J[6]==="["?"(?!)":"[\\\\S\\\\s]");13.O++}F{cc=U.8g("&&"+1e.17(J.H),1F.7Q,1F.7S,"",{7D:"\\\\"})[0];1b.K(J[6]+cc+"]");13.O+=cc.u+1}}F{c(J[7]){c(7R&&J[7]==="."){1b.K("[\\\\S\\\\s]")}F{c(7M&&1F.37.1R(J[7])){38=2w.T.2n(1F.37,1e.17(13.O-1))[0].u;c(!1F.5B.1R(1e.17(13.O-1+38))){1b.K("(?:)")}13.O+=38-1}F{1b.K(J[7])}}}F{1b.K(J[0])}}}}}}}3p=10(1b.5A(""),2w.E.2n(1O,/[9B]+/g,""));3p.1C={1g:1e,2m:5z?3v:v};q 3p};U.9q=l(R,o){3q[R]=o};10.14.T=l(z){h 1h=2w.T.2n(f,z),R,i,5y;c(1h){c(8G&&1h.u>1){5y=W 10("^"+f.1g+"$(?!\\\\s)",f.5E());2w.E.2n(1h[0],5y,l(){D(i=1;i<8j.u-2;i++){c(8j[i]===3j){1h[i]=3j}}})}c(f.1C&&f.1C.2m){D(i=1;i<1h.u;i++){R=f.1C.2m[i-1];c(R){1h[R]=1h[i]}}}c(f.3l&&f.O>(1h.H+1h[0].u)){f.O--}}q 1h}})()}10.14.5E=l(){q(f.3l?"g":"")+(f.av?"i":"")+(f.8F?"m":"")+(f.37?"x":"")+(f.a4?"y":"")};10.14.3E=l(7A){h 5F=W U(f.1g,(7A||"")+f.5E());c(f.1C){5F.1C={1g:f.1C.1g,2m:f.1C.2m?f.1C.2m.17(0):v}}q 5F};10.14.2n=l(90,z){q f.T(z)};10.14.9b=l(9h,8c){q f.T(8c[0])};U.5P=l(57,5e){h 55="/"+57+"/"+(5e||"");q U.5P[55]||(U.5P[55]=W U(57,5e))};U.41=l(z){q z.E(/[-[\\]{}()*+?.\\\\^$|,#\\s]/g,"\\\\$&")};U.8g=l(z,G,11,1j,2R){h 2R=2R||{},2P=2R.7D,12=2R.c5,1j=1j||"",5r=1j.Y("g")>-1,70=1j.Y("i")>-1,7v=1j.Y("m")>-1,5a=1j.Y("y")>-1,1j=1j.E(/y/g,""),G=G 68 10?(G.3l?G:G.3E("g")):W U(G,"g"+1j),11=11 68 10?(11.3l?11:11.3E("g")):W U(11,"g"+1j),1M=[],2o=0,1u=0,1t=0,1z=0,2b,2c,1B,1K,3Q,48;c(2P){c(2P.u>1){3H aC("4y\'t 4C aL aJ 7u 41 7B")}c(7v){3H 7r("4y\'t 4C 41 7B 8z bi b8 8F b7")}3Q=U.41(2P);48=W 10("^(?:"+3Q+"[\\\\S\\\\s]|(?:(?!"+G.1g+"|"+11.1g+")[^"+3Q+"])+)+",70?"i":"")}2j(I){G.O=11.O=1t+(2P?(48.T(z.17(1t))||[""])[0].u:0);1B=G.T(z);1K=11.T(z);c(1B&&1K){c(1B.H<=1K.H){1K=v}F{1B=v}}c(1B||1K){1u=(1B||1K).H;1t=(1B?G:11).O}F{c(!2o){2h}}c(5a&&!2o&&1u>1z){2h}c(1B){c(!2o++){2b=1u;2c=1t}}F{c(1K&&2o){c(!--2o){c(12){c(12[0]&&2b>1z){1M.K([12[0],z.17(1z,2b),1z,2b])}c(12[1]){1M.K([12[1],z.17(2b,2c),2b,2c])}c(12[2]){1M.K([12[2],z.17(2c,1u),2c,1u])}c(12[3]){1M.K([12[3],z.17(1u,1t),1u,1t])}}F{1M.K(z.17(2c,1u))}1z=1t;c(!5r){2h}}}F{G.O=11.O=0;3H bP("8L aq 9r ar 8Z")}}c(1u===1t){1t++}}c(5r&&!5a&&12&&12[0]&&z.u>1z){1M.K([12[0],z.17(1z),1z,z.u])}G.O=11.O=0;q 1M};',62,768,'||||||||||||if|||this||var||||function||||sh|return||||length|null||||str|div|utils|code|for|replace|else|left|index|true|_121|push|className|config|false|lastIndex||document|name||exec|XRegExp|getParam|new|lt|indexOf|gt|RegExp|_139|vN|part|prototype|||slice|pos|_d3|css|_11f|create|right|_119|strings|source|_129|bar|_13a|id|script|style|_da|_d6|lines|window|vars|class|_145|_144|_b5|toolbar|_f4|_103|_146|alert|_149|_x|_c3|params|lib|obj|tab|highlight|continue|_14a|html|_142|doc|_11a|split|innerHTML|test|_ec|_5a|_5b|in|_4f|text|_8|_3c|_91|_98|createElement|_e7|value|_c5|width|href|_c2|substr|min|_147|_148|brushes|height|_6e|_cd|break|attributes|while|_be|_75|captureNames|call|_143|appendChild|_bc|_5f|http|concat|toString|_f0|real|_e9|line|execute|wnd|nbsp|matches|getMatches|_66|_e3|trim|_ed|_40|_10f|case|_61|_c1|_55|brush|_13c|size|_13b|_f9|unindent|_d9|_28|_c4|SyntaxHighlighter|_81|_88|_5|m2|_7a|body|_a2|m1|_80|extended|len|font|_fe|gm|_fd|fixInputString|Math|color|gutter|_4e|title|undefined|com|global|printFrame|_ef|_7d|_125|_118|_ee|_8e|print|_e5|_11e|_7b|_32|_49|_cc|offsetMatches|_7c|_25|write|addFlags|td|_104|throw|htmlScript|_22|regex|_a7|_124|_af|_2|_c6|_14b|_b6|_b4|_3|substring|_60|_76|_6a|DIV|_10b|isNaN|escape|_62|url|_7e|_6b|eachLine|_ae|esc|_47|HtmlScript|_b2|values|_8c|gi|_89|_b9|object|_b0|_ad|_blank|_e1|xmlBrush|link|close|removeChild|_b3|type|_a6|_73|findBrush|Match|top|_9d|can|popup|_c8|_53|supply|_a3|win|focus|span|_54|_9e|_50|_cb|_4d|_d7|_5d|getElementsByTagName|_6c|_ba|_b8|_bf|useScriptTags|_82|_ea|_ce|func|_d0|discoveredBrushes||_4c|_f6|show|pre|key|_29|_133|hide|regexList|_141|_19|_1a|viewSource|_134|_2b|originalCode|wrap|copyToClipboard|highlighterId|toolbarItemHeight|toolbarItemWidth|_2a|_2c|_2e|_2d|expandSource|_13e|_4|_7|from|item|charAt|www|r2|_11d|join|quantifier|_113|_e|getNativeFlags|_12e|_17|_18|String|_10|_b|_9|_f|_d|collapsed|cache|contentWindow|_101|_ff|_fb|swf|_30|getBrushNameCss|_fa|brushName|_100|_f5|_37|_35|content|_24|_38|collapse|_2f|instanceof|clipboardSwf|_27|defaults|merge|guid|syntaxhighlighter|highlighters|toolbarCommands|2009|_6|500px|measureSpace|_78|createButton|message|_79|clipboard|to|0px|_85|decoration|center|_83|margin|w3|rel|head|stylesheet|org|help|xhtml1|_3f|0099FF|align|DTD|alexgorbatchev|copyStyles|navigator|none|executeCommand|_3e|version|toLowerCase|_5e|_1e|_65|noBrush|switch|flash|_52|screen|event|attachEvent|_13f|shockwave|_4b|_48|clipboardData|px|commandName|aboutDialog|copyToClipboardConfirmation|_84|scrollbars|_14|_36|items|_6d|_16|_13|_15|_12|_a|userAgent|_d8|unicode|_d5|_112|process|get|TypeError|_de|_dd|one|_140|_d1|brushNotHtmlScript|parentNode|pP|_12d|character|addEvent|escapeChar|_106|_f7|_c9|_c7|Highlighter|_df|decorate|table|_11c|_f1|plain|_f8|classLeft|_11b|classRight|tr|_f2|padNumber|numbers|typeof|_e2|_e0|toBoolean|_e4|matchesSortCallback|pad|first|parseInt|removeNestedMatches|match|light|tabs|processSmartTabs|processTabs|args|smart|toArray|stripBrs|matchRecursive|regexLib|findMatches|arguments|auto|links|processUrls|defaultAdd|_a9|_a8|_a1|_a4|tagName|createDisplayLines|debug|getSyntaxHighlighterScriptTags|_93|insertSpaces|processMatches|when|_90|bloggerMode|trimFirstAndLastLines|_9a|_b7|multiline|_117|parseParams|stripCData|_bd|Copyright|subject|Alex|2004|development|_1c|keep|donate|Gorbatchev|_1b|syntax|JavaScript|active|highlighter|multiLineSingleQuotedString|delimiters|_12f|string|scriptScriptTags|aspScriptTags|another|constructing|sgi|try|catch|replaceVar|flags|apply|phpScriptTags|singleLineCComments|singleLinePerlComments|getKeywords|multiLineCComments|_131|forHtmlScript|doubleQuotedString|xmlComments|onclick|multiLineDoubleQuotedString|singleQuotedString|spaceWidth|bottom|addPlugin|contains|1999|xmlns|dtd|TR|transitional|xhtml|meta|utf|About|sx|charset|Type|equiv|Content|EN|Transitional|your|now|Can|is|The|view|copy|find|Brush|PUBLIC|W3C|XHTML|DOCTYPE|option|wasn|configured|family|Geneva|you|like|please|If|sticky|October|target|https|paypal|_s|xclick|hosted_button_id|cmd|webscr|cgi|bin|364|4em|background|fff|000|serif|sans|Arial|Helvetica|1em|data|unbalanced|75em|large|xx|ignoreCase|3em|2930402|always|about|_42|sort|SyntaxError|printing|shCore|_43|_44|max|round|than|250|more|500|alt|absolute|error|highlighted|ok|number|amp|setData|printSource|_39|cssText|position|IFRAME|_3b|_1f|random|1000000|_a5|block|CDATA|flag|the|htmlscript|1000|getElementById|getPropertyValue|offsetWidth|getComputedStyle|_99|opera|Array|using|textarea|open|load|Xml|_cf|lastIndexOf|_d4|all||replaceChild|70em|aliases|addEventListener|on|30em|spaces|_3a|flashVars|nogutter|transparent|wmode|allowScriptAccess|_8a|msie|classid|96b8|444553540000|11cf|ae6d|clsid|d27cdb6e|no|Error|location|resizable|400|750|_20|_21|menubar|onmouseout|_clipboard|application|onmouseover|param|_26|codebase|menu|valueNames|movie|cab|swflash|cabs|embed|conf||command|_34|_33|src|_10c|_10a|macromedia|download|highlighter_|pub|important'.split('|'),0,{}))</script> <script type="text/javascript" style="display: none;">SyntaxHighlighter.brushes.Plain=function()
{};SyntaxHighlighter.brushes.Plain.prototype=new SyntaxHighlighter.Highlighter();SyntaxHighlighter.brushes.Plain.aliases=['text','plain'];</script> <script type="text/javascript" style="display: none;">SyntaxHighlighter.brushes.Cpp=function()
{var datatypes='ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG DWORD_PTR '+
'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH '+
'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP '+
'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY '+
'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT '+
'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE '+
'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF '+
'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR '+
'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR PCWSTR '+
'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY PINT '+
'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 POINTER_32 '+
'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR '+
'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 '+
'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT '+
'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG '+
'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM WPARAM '+
'char bool short int __int32 __int64 __int8 __int16 long float double __wchar_t '+
'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception _EXCEPTION_POINTERS '+
'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t __finddata64_t '+
'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t '+
'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t _purecall_handler '+
'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function '+
'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf '+
'va_list wchar_t wctrans_t wctype_t wint_t signed';var keywords='break case catch class const __finally __exception __try '+
'const_cast continue private public protected __declspec '+
'default delete deprecated dllexport dllimport do dynamic_cast '+
'else enum explicit extern if for friend goto inline '+
'mutable naked namespace new noinline noreturn nothrow '+
'register reinterpret_cast return selectany '+
'sizeof static static_cast struct switch template this '+
'thread throw true false try typedef typeid typename union '+
'using uuid virtual void volatile whcar_t while';var functions='assert isalnum isalpha iscntrl isdigit isgraph islower isprint'+
'ispunct isspace isupper isxdigit tolower toupper errno localeconv '+
'setlocale acos asin atan atan2 ceil cos cosh exp fabs floor fmod '+
'frexp ldexp log log10 modf pow sin sinh sqrt tan tanh jmp_buf '+
'longjmp setjmp raise signal sig_atomic_t va_arg va_end va_start '+
'clearerr fclose feof ferror fflush fgetc fgetpos fgets fopen '+
'fprintf fputc fputs fread freopen fscanf fseek fsetpos ftell '+
'fwrite getc getchar gets perror printf putc putchar puts remove '+
'rename rewind scanf setbuf setvbuf sprintf sscanf tmpfile tmpnam '+
'ungetc vfprintf vprintf vsprintf abort abs atexit atof atoi atol '+
'bsearch calloc div exit free getenv labs ldiv malloc mblen mbstowcs '+
'mbtowc qsort rand realloc srand strtod strtol strtoul system '+
'wcstombs wctomb memchr memcmp memcpy memmove memset strcat strchr '+
'strcmp strcoll strcpy strcspn strerror strlen strncat strncmp '+
'strncpy strpbrk strrchr strspn strstr strtok strxfrm asctime '+
'clock ctime difftime gmtime localtime mktime strftime time';this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:'comments'},{regex:SyntaxHighlighter.regexLib.multiLineCComments,css:'comments'},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:'string'},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:'string'},{regex:/^ *#.*/gm,css:'preprocessor'},{regex:new RegExp(this.getKeywords(datatypes),'gm'),css:'color1 bold'},{regex:new RegExp(this.getKeywords(functions),'gm'),css:'functions bold'},{regex:new RegExp(this.getKeywords(keywords),'gm'),css:'keyword bold'}];};SyntaxHighlighter.brushes.Cpp.prototype=new SyntaxHighlighter.Highlighter();SyntaxHighlighter.brushes.Cpp.aliases=['cpp','c'];</script> <script type="text/javascript" style="display: none;">SyntaxHighlighter.brushes.Java=function()
{var keywords='abstract assert boolean break byte case catch char class const '+
'continue default do double else enum extends '+
'false final finally float for goto if implements import '+
'instanceof int interface long native new null '+
'package private protected public return '+
'short static strictfp super switch synchronized this throw throws true '+
'transient try void volatile while';this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:'comments'},{regex:/\/\*([^\*][\s\S]*)?\*\//gm,css:'comments'},{regex:/\/\*(?!\*\/)\*[\s\S]*?\*\//gm,css:'preprocessor'},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:'string'},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:'string'},{regex:/\b([\d]+(\.[\d]+)?|0x[a-f0-9]+)\b/gi,css:'value'},{regex:/(?!\@interface\b)\@[\$\w]+\b/g,css:'color1'},{regex:/\@interface\b/g,css:'color2'},{regex:new RegExp(this.getKeywords(keywords),'gm'),css:'keyword'}];this.forHtmlScript({left:/(&lt;|<)%[@!=]?/g,right:/%(&gt;|>)/g});};SyntaxHighlighter.brushes.Java.prototype=new SyntaxHighlighter.Highlighter();SyntaxHighlighter.brushes.Java.aliases=['java'];</script> <script type="text/javascript">(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var themecssurl = "http://s0.wp.com/wp-content/plugins/syntaxhighlighter-wpcom/shThemeDefault.css?m=1306998979g&amp;ver=2.1.364b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.getElementsByTagName("head")[0].appendChild(themecss);
	})();
	SyntaxHighlighter.config.clipboardSwf = 'http://s2.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf?m=1306998986g';
	SyntaxHighlighter.config.strings.expandSource = 'show source';
	SyntaxHighlighter.config.strings.viewSource = 'view source';
	SyntaxHighlighter.config.strings.copyToClipboard = 'copy to clipboard';
	SyntaxHighlighter.config.strings.copyToClipboardConfirmation = 'The code is in your clipboard now';
	SyntaxHighlighter.config.strings.print = 'print';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.all();
</script> <script style="display: none;" type="text/javascript">function st_go(a){var i,u=document.location.protocol+'//stats.wordpress.com/g.gif?host='+escape(document.location.host)+'&rand='+Math.random();for(i in a){u=u+'&'+i+'='+escape(a[i]);}u=u+'&ref='+escape(document.referrer);document.open();document.write("<img id=\"wpstats\" src=\""+u+"\" alt=\"\" />");document.close();}
function ex_go(a){var i,u=document.location.protocol+'//stats.wordpress.com/g.gif?v=wpcom2&rand='+Math.random();for(i in a){u=u+'&'+i+'='+escape(a[i]);}document.open();document.write("<img id=\"wpstats2\" src=\""+u+"\" alt=\"\" style=\"display:none\" />");document.close();}
function re_go(a){var i,u=document.location.protocol+'//stats.wordpress.com/g.gif?rand='+Math.random();for(i in a){u=u+'&'+i+'='+escape(a[i]);}document.open();document.write("<img id=\"wpstats\" src=\""+u+"\" alt=\"\" style=\"display:none\" />");document.close();}
function clicktrack(e){var t;if(e){t=e.target;}else{t=window.event.srcElement;}linktrack(t,500);}
function contexttrack(e){var t;if(e){t=e.target;}else{t=window.event.srcElement;}linktrack(t,0);}
function linktracker_init(b,p){_blog=b;_post=p;_host=document.location.host?document.location.host:document.location.toString().replace(/^[^\/]*\/+([^\/]*)(\/.*)?/,'$1');if(document.body){document.body.onclick=clicktrack;document.body.oncontextmenu=contexttrack;}else if(document){document.onclick=clicktrack;document.oncontextmenu=contexttrack;}else{}}
function linktrack(a,d){try{if(!a||a==null)return;while(a.nodeName!="A"){if(typeof a.parentNode=='undefined')return;a=a.parentNode;if(!a)return;}
b=a;while(b.nodeName!="BODY"){if(typeof a.parentNode=='undefined')return;b=b.parentNode;if(b.id=='wpcombar')return;if(b.id=='wpadminbar')return;}
if(a.href.match(eval('/^(http(s)?:\\/\\/)?'+_host+'/')))return;if(a.href.match(eval('/^javascript/')))return;var bh=a.href;var pr=document.location.protocol||'http:';var r=(typeof a.rel!='undefined')?escape(a.rel):'0';var b=(typeof _blog!='undefined')?_blog:'0';var p=(typeof _post!='undefined')?_post:'0';var src=pr+'//stats.wordpress.com/c.gif?b='+b+'&p='+p+'&r='+r+'&u='+escape(bh)+"&rand="+Math.random();if(a.className.match('flaptor')){var fx=function(c){return c.replace(/flaptor\s*/,'')};var f='b'+_blog+'p'+_post+' '+fx(a.className);var links=document.getElementsByTagName('A');for(i=0;i<links.length;i++){if(links[i].className.match('flaptor'))
f=f+' '+fx(links[i].className);}
src=src+'&f='+f;}
var x=new Image(1,1);x.src=src;if(d){var now=new Date();var end=now.getTime()+d;while(true){now=new Date();if(now.getTime()>end){break}}}}catch(e){}}</script> <script type="text/javascript">st_go({'blog':'5789743','v':'wpcom','user_id':'0','post':'0','subd':'tausiq'});
ex_go({'crypt':'UE40eW5QN0p8M2Y/RE1LVmwrVi5vQS5fVFtfdHBbPyw1VXIrU3hWLHhzVndTdktBX0ddJnptN2cxVkxOV1Z5eHw9U05IZ1JWSz85dGM9fGF4NW1FaHZuOWZlRl1SOUZ4RVNiQ35rVVgxSC0/dVFXNXw2WjlUTUZzLnZ2JmpEcz89P2g4S1hXY25VaFg1QjFTYiVtUWlTM014TmldRFJ8cXdUSFAzdC5Zfmx0cmhxJi5pbGROdS5ra3BVMjhVZzM0NFlaL0tIdDBtMXpCJmRCVi5sdiY1Sjg1XTl6fDZtTU9qRVU0Yk4tdg=='});
addLoadEvent(function(){linktracker_init('5789743',0);});
	</script><img id="wpstats" src="13_files/g.gif" alt=""><img id="wpstats2" src="13_files/g_002.gif" alt="" style="display: none;"> <script language="javascript"><!--
bmi_SafeAddOnload(bmi_load,"bmi_orig_img",0);//-->
</script></body></html>