;subString
TITLE SUBSTRING
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB 'ENTER MAIN STRING:',0AH,0DH, '$'
MSG2 DB 'ENTER SUBSTRING : ',0AH,0DH, '$'
LINE DB 0AH,0DH,'$'
MAINST DB  80 DUP (0)
SUBST  DB  80 DUP (0)
SUBLEN DW  0
MAINLEN DW  0
START DW  0
STOP DW  0
MSGYES DB 'IT IS A SUBSTRING. ',0AH,0DH,'$'
MSGNO DB 'IT IS NOT A SUBSTRING. ',0AH,0DH,'$'

.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX
MOV ES,AX

LEA DX,MSG1
MOV AH,9
INT 21H

LEA DI,MAINST
CALL READ_STR
MOV MAINLEN,BX

LEA DX,LINE
MOV AH,9
INT 21H


LEA DX,MSG2
;MOV AH,9
INT 21H

LEA DI,SUBST
CALL READ_STR
MOV SUBLEN,BX

LEA DX,LINE
MOV AH,9
INT 21H

MOV BX,MAINLEN
OR BX,BX
JZ NOTSUB
MOV BX,SUBLEN
OR BX,BX
JZ NOTSUB

CMP MAINLEN,BX;BX=SUBLEN
JL NOTSUB

LEA SI,SUBST
LEA DI,MAINST
CLD


MOV STOP,DI
MOV BX,MAINLEN
ADD STOP,BX
MOV AX,SUBLEN
SUB STOP,AX

MOV START,DI

LOPPP:
	MOV CX,SUBLEN
	MOV DI,START
	LEA SI,SUBST
	REPE CMPSB
	JE YESSUB
	
	INC START
	MOV BX,STOP
	CMP START,BX
	JG NOTSUB
	JMP LOPPP
	
	

NOTSUB:
	MOV AH,9
	LEA DX,MSGNO
	INT 21H
	JMP EXIT_1

YESSUB:
	MOV AH,9
	LEA DX,MSGYES
	INT 21H
	JMP EXIT_1



;EXIT
EXIT_1:
	MOV AH,4CH
	INT 21H
MAIN ENDP

;read string proc
READ_STR PROC
PUSH AX
PUSH DX

CLD
XOR BX,BX
MOV AH,1
INT 21H

READ:
	CMP AL,0DH
	JE EXIT
	CMP AL,8H
	JNE STORE
	DEC BX
	DEC DI
	JMP INPUT
STORE:
	STOSB
	INC BX
INPUT:
	MOV AH,1
	INT 21H
	JMP READ
EXIT:
POP DX
POP AX
RET
READ_STR  ENDP 
;end of read string proc
	END MAIN
